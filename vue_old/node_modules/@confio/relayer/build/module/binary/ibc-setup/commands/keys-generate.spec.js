import fs from 'fs';
import test from 'ava';
import sinon from 'sinon';
import { TestLogger } from '../../../lib/testutils';
import { run } from './keys-generate';
const fsWriteFileSync = sinon.stub(fs, 'writeFileSync');
test.beforeEach(() => {
    sinon.reset();
    fsWriteFileSync.returns();
});
test('generates mnemonic to stdout', (t) => {
    const logger = new TestLogger();
    const options = {
        keyFile: null,
    };
    run(options, logger);
    t.assert(logger.info.calledOnce);
    t.assert(logger.info.calledWithMatch(/[\\w ]+/));
    t.assert(fsWriteFileSync.notCalled);
});
test('generates mnemonic to file', (t) => {
    const logger = new TestLogger();
    const options = {
        keyFile: '/home/user/mnemonic.txt',
    };
    run(options, logger);
    const [path, contents] = fsWriteFileSync.getCall(0).args;
    t.is(path, options.keyFile);
    t.regex(contents, /[\\w ]+/);
    t.assert(logger.info.calledOnce);
    t.assert(logger.info.calledWithMatch(/Saved mnemonic to/));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5cy1nZW5lcmF0ZS5zcGVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2JpbmFyeS9pYmMtc2V0dXAvY29tbWFuZHMva2V5cy1nZW5lcmF0ZS5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLElBQUksQ0FBQztBQUVwQixPQUFPLElBQUksTUFBTSxLQUFLLENBQUM7QUFDdkIsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBRzFCLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUVwRCxPQUFPLEVBQVcsR0FBRyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsTUFBTSxlQUFlLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFFeEQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7SUFDbkIsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBRWQsZUFBZSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQzVCLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLDhCQUE4QixFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7SUFDekMsTUFBTSxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztJQUVoQyxNQUFNLE9BQU8sR0FBWTtRQUN2QixPQUFPLEVBQUUsSUFBSTtLQUNkLENBQUM7SUFFRixHQUFHLENBQUMsT0FBTyxFQUFHLE1BQTRCLENBQUMsQ0FBQztJQUU1QyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDakMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3RDLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLDRCQUE0QixFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7SUFDdkMsTUFBTSxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztJQUVoQyxNQUFNLE9BQU8sR0FBWTtRQUN2QixPQUFPLEVBQUUseUJBQXlCO0tBQ25DLENBQUM7SUFFRixHQUFHLENBQUMsT0FBTyxFQUFHLE1BQTRCLENBQUMsQ0FBQztJQUU1QyxNQUFNLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxHQUFHLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3pELENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM1QixDQUFDLENBQUMsS0FBSyxDQUFDLFFBQWtCLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFFdkMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2pDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQzdELENBQUMsQ0FBQyxDQUFDIn0=