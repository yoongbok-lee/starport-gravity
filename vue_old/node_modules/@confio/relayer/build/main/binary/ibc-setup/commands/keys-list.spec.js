"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const ava_1 = __importDefault(require("ava"));
const sinon_1 = __importDefault(require("sinon"));
const testutils_1 = require("../../../lib/testutils");
const generate_mnemonic_1 = require("../../utils/generate-mnemonic");
const keys_list_1 = require("./keys-list");
const fsReadFileSync = sinon_1.default.stub(fs_1.default, 'readFileSync');
ava_1.default.beforeEach(() => {
    sinon_1.default.reset();
});
const registryYaml = `
version: 1

chains:
  local_wasm:
    chain_id: testing
    prefix: wasm
    gas_price: 0.025ucosm
    hd_path: m/44'/108'/0'/2'
    rpc:
      - http://localhost:26659
  local_simapp:
    chain_id: simd-testing
    prefix: cosmos
    gas_price: 0.025umuon
    hd_path: m/44'/108'/0'/3'
    rpc:
      - http://localhost:26658`;
ava_1.default('lists addresses for every chain in the registry', async (t) => {
    const logger = new testutils_1.TestLogger();
    const options = {
        home: '/home/user',
        mnemonic: generate_mnemonic_1.generateMnemonic(),
    };
    fsReadFileSync.returns(registryYaml);
    await keys_list_1.run(options, logger);
    t.assert(fsReadFileSync.calledOnce);
    t.assert(logger.info.calledOnce);
    t.assert(logger.info.calledWithMatch(/local_wasm: [a-z0-9]+\nlocal_simapp: [a-z0-9]+/));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5cy1saXN0LnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvYmluYXJ5L2liYy1zZXR1cC9jb21tYW5kcy9rZXlzLWxpc3Quc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDRDQUFvQjtBQUVwQiw4Q0FBdUI7QUFDdkIsa0RBQTBCO0FBRzFCLHNEQUFvRDtBQUNwRCxxRUFBaUU7QUFFakUsMkNBQTJDO0FBRTNDLE1BQU0sY0FBYyxHQUFHLGVBQUssQ0FBQyxJQUFJLENBQUMsWUFBRSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBRXRELGFBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFO0lBQ25CLGVBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNoQixDQUFDLENBQUMsQ0FBQztBQUVILE1BQU0sWUFBWSxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7OzsrQkFpQlUsQ0FBQztBQUVoQyxhQUFJLENBQUMsaURBQWlELEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO0lBQ2xFLE1BQU0sTUFBTSxHQUFHLElBQUksc0JBQVUsRUFBRSxDQUFDO0lBRWhDLE1BQU0sT0FBTyxHQUFZO1FBQ3ZCLElBQUksRUFBRSxZQUFZO1FBQ2xCLFFBQVEsRUFBRSxvQ0FBZ0IsRUFBRTtLQUM3QixDQUFDO0lBRUYsY0FBYyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUVyQyxNQUFNLGVBQUcsQ0FBQyxPQUFPLEVBQUcsTUFBNEIsQ0FBQyxDQUFDO0lBRWxELENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNqQyxDQUFDLENBQUMsTUFBTSxDQUNOLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUN6QixnREFBZ0QsQ0FDakQsQ0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUMifQ==