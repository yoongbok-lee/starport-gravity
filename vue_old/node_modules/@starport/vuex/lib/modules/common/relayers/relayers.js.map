{"version":3,"sources":["../../../../src/modules/common/relayers/relayers.js"],"names":["ibcRegistry","Registry","defaultRegistryTypes","MsgCreateClient","MsgUpdateClient","MsgConnectionOpenInit","MsgConnectionOpenTry","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgChannelOpenInit","MsgChannelOpenTry","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgRecvPacket","MsgAcknowledgement","MsgTimeout","MsgTransfer","getDefaultState","relayers","transientLog","msg","relayerLinks","state","namespaced","getters","getRelayer","name","find","x","getRelayers","getRelayerLink","chainFromChannel","channel","status","src","channelId","chainIdB","chainToChannel","dest","log","mutations","RESET_STATE","Object","assign","SET_RELAYERS","CREATE_RELAYER","relayer","LINK_RELAYER","link","linkDetails","relayerIndex","findIndex","CONNECT_RELAYER","channelDetails","RUN_RELAYER","running","STOP_RELAYER","SET_LOG_MSG","LAST_QUERIED_HEIGHTS","heights","actions","init","commit","rootGetters","dispatch","forEach","createExternalRelayer","prefix","endpoint","gasPrice","createRelayer","chainId","external","DirectSecp256k1HdWallet","fromMnemonic","signerA","signerB","getAccounts","accountA","accountB","optionsA","GasPrice","fromString","registry","Tendermint34Client","connect","tmClientA","signingClientA","StarportSigningClient","getChainId","chainIdA","optionsB","tmClientB","signingClientB","targetAddress","address","root","loadRelayer","SpVuexError","info","error","warn","verbose","debug","logger","clientA","IbcClient","clientB","Link","createWithExistingConnections","endA","connectionID","endB","linkData","clientID","console","linkRelayer","createWithNewConnections","connectRelayer","relayerLink","createChannel","channels","channelData","runRelayer","options","poll","maxAgeDest","maxAgeSrc","stopRelayer","relayerLoop","nextRelay","checkAndRelayPacketsAndAcks","updateClientIfStale"],"mappings":"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","sourcesContent":["import StarportSigningClient from \"./lib/starportSigningClient\";\r\nimport SpVuexError from '../../../errors/SpVuexError'\r\nimport { Endpoint, IbcClient, Link } from \"./ts-relayer\";\r\nimport { Registry, DirectSecp256k1HdWallet } from \"@cosmjs/proto-signing\";\r\nimport { stringToPath } from \"@cosmjs/crypto\";\r\nimport { sleep } from \"@cosmjs/utils\";\r\nimport { GasPrice } from \"@cosmjs/launchpad\";\r\nimport { defaultRegistryTypes } from \"@cosmjs/stargate\";\r\nimport { Tendermint34Client } from \"@cosmjs/tendermint-rpc\";\r\nimport { MsgTransfer } from \"./ts-relayer/codec/ibc/applications/transfer/v1/tx\";\r\nimport {\r\n  MsgAcknowledgement,\r\n  MsgChannelOpenAck,\r\n  MsgChannelOpenConfirm,\r\n  MsgChannelOpenInit,\r\n  MsgChannelOpenTry,\r\n  MsgRecvPacket,\r\n  MsgTimeout,\r\n} from \"./ts-relayer/codec/ibc/core/channel/v1/tx\";\r\nimport {\r\n  MsgCreateClient,\r\n  MsgUpdateClient,\r\n} from \"./ts-relayer/codec/ibc/core/client/v1/tx\";\r\nimport {\r\n  MsgConnectionOpenAck,\r\n  MsgConnectionOpenConfirm,\r\n  MsgConnectionOpenInit,\r\n  MsgConnectionOpenTry,\r\n} from \"./ts-relayer/codec/ibc/core/connection/v1/tx\";\r\n\r\nfunction ibcRegistry() {\r\n  return new Registry([\r\n    ...defaultRegistryTypes,\r\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\r\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\r\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\r\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\r\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\r\n    [\r\n      \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\r\n      MsgConnectionOpenConfirm,\r\n    ],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\r\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\r\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\r\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\r\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\r\n  ]);\r\n}\r\nconst getDefaultState = () => {\r\n\treturn {\r\n\t\trelayers: [],\r\n\t\ttransientLog: {\r\n\t\t\tmsg: ''\r\n\t\t},\r\n\t\trelayerLinks:{}\r\n\t};\r\n};\r\n// initial state\r\nconst state = getDefaultState();\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters: {\r\n\t\tgetRelayer: (state) => (name) => {\r\n\t\t\treturn state.relayers.find(x => x.name==name)\r\n\t\t},\r\n\t\tgetRelayers: (state) => state.relayers,\r\n\t\tgetRelayerLink: (state) => (name) => {\r\n\t\t\treturn state.relayerLinks[name]\r\n\t\t},\r\n\t\tchainFromChannel: (state) => (channel) => {\r\n\t\t\treturn state.relayers.find(x => (x.status=='connected' && x.src.channelId==channel))?.chainIdB ?? channel\r\n\t\t},\r\n\t\tchainToChannel: (state) => (channel) => {\r\n\t\t\treturn state.relayers.find(x => (x.status=='connected' && x.dest.channelId==channel))?.chainIdB ?? channel\r\n\t\t},\r\n\t\tlog: (state)=> state.transientLog.msg\r\n\t},\r\n\tmutations: {\r\n\t\tRESET_STATE(state) {\r\n\t\t\t\tObject.assign(state, getDefaultState());\r\n\t\t},\r\n\t\tSET_RELAYERS(state,relayers) {\r\n\t\t\tstate.relayers=relayers\r\n\t\t},\r\n\t\tCREATE_RELAYER(state,relayer) {\r\n\t\t\tstate.relayers = [...state.relayers,relayer]\r\n\t\t},\r\n\t\tLINK_RELAYER(state,{name, link, ...linkDetails}) {\r\n\t\t\tlet relayerIndex = state.relayers.findIndex(x => x.name==name)\r\n\t\t\tif(state.relayers[relayerIndex].status=='connected') {\r\n\t\t\t\tstate.relayers[relayerIndex]={ ...state.relayers[relayerIndex],...linkDetails,status: 'connected'}\r\n\t\t\t}else{\r\n\t\t\t\tstate.relayers[relayerIndex]={ ...state.relayers[relayerIndex],...linkDetails,status: 'linked'}\r\n\t\t\t}\r\n\t\t\tstate.relayerLinks[name]=link\r\n\t\t},\r\n\t\tCONNECT_RELAYER(state, {name, ...channelDetails}) {\r\n\t\t\tlet relayerIndex = state.relayers.findIndex(x => x.name==name)\r\n\t\t\tstate.relayers[relayerIndex]={ ...state.relayers[relayerIndex],...channelDetails, status: 'connected'}\r\n\t\t},\r\n\t\tRUN_RELAYER(state, name) {        \r\n\t\t\tstate.relayers.find(x => x.name==name).running=true\r\n\t\t},\r\n\t\tSTOP_RELAYER(state, name) {\r\n\t\t\tstate.relayers.find(x => x.name==name).running=false\r\n\t\t},\r\n\t\tSET_LOG_MSG(state, msg) {\r\n\t\t\tstate.transientLog.msg=msg\r\n\t\t},\r\n\t\tLAST_QUERIED_HEIGHTS(state, {name,heights}) {\r\n\t\t\tstate.relayers.find(x => x.name==name).heights=heights\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\t\tinit({commit,rootGetters,dispatch}) {\r\n\t\t\tcommit('RESET_STATE')\r\n\t\t\tconst relayers=rootGetters['common/wallet/relayers']\r\n\t\t\tcommit('SET_RELAYERS',relayers)\r\n\t\t\trelayers.forEach((relayer)=> {\r\n\t\t\t\tif (relayer.status=='linked' || relayer.status=='connected') {\r\n\t\t\t\t\tdispatch('loadRelayer',relayer.name)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tasync createExternalRelayer({commit, rootGetters, getters, dispatch},{ name, prefix, endpoint, gasPrice}) {\r\n\t\t},\r\n\t\tasync createRelayer({commit, rootGetters, getters, dispatch},{ name, prefix, endpoint, gasPrice,chainId,channelId,external}) {\r\n\t\t\tlet relayer\r\n\t\t\tif (!external) {\r\n\t\t\t\trelayer = {\r\n\t\t\t\t\tname,prefix,endpoint,gasPrice,\r\n\t\t\t\t\texternal:false,\r\n\t\t\t\t\tstatus: \"created\",\r\n\t\t\t\t\theights: {},\r\n\t\t\t\t\trunning: false\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\trelayer = {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\texternal:true,\r\n\t\t\t\t\tstatus: 'connected',\r\n\t\t\t\t\tchainIdB: chainId,\r\n\t\t\t\t\tsrc: {\r\n\t\t\t\t\t\tchannelId: channelId\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!external) {\r\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trootGetters['common/env/addrPrefix']\r\n\t\t\t\t);\r\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trelayer.prefix\r\n\t\t\t\t);\r\n\t\t\t\tconst [accountA] = await signerA.getAccounts();\r\n\t\t\t\tconst [accountB] = await signerB.getAccounts();\r\n\t\t\t\tconst optionsA = {\r\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(rootGetters['common/wallet/gasPrice']),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(\r\n\t\t\t\t\trootGetters['common/env/apiTendermint']\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientA = new StarportSigningClient(\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\tsignerA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\trelayer.chainIdA = await signingClientA.getChainId();\r\n\t\t\t\tconst optionsB = {\r\n\t\t\t\t\tprefix: relayer.prefix,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(\r\n\t\t\t\t\trelayer.endpoint\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientB = new StarportSigningClient(\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\tsignerB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\trelayer.chainIdB = await signingClientB.getChainId();\r\n\t\t\t\trelayer.targetAddress=accountB.address\r\n\t\t\t}\r\n\t\t\tcommit('CREATE_RELAYER',relayer)\r\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t},\r\n\t\tasync loadRelayer({commit, rootGetters, getters,dispatch},name) {\r\n\t\t\tconst relayer=getters['getRelayer'](name)\r\n\t\t\tif (relayer.status!=='linked' && relayer.status!=='connected') {\r\n\t\t\t\tthrow new SpVuexError(\r\n\t\t\t\t\t'relayers:connectRelayer',\r\n\t\t\t\t\t'Relayer already connected.'\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trootGetters['common/env/addrPrefix']\r\n\t\t\t\t);\r\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trelayer.prefix\r\n\t\t\t\t);\r\n\t\t\t\tconst [accountA] = await signerA.getAccounts();\r\n\t\t\t\tconst [accountB] = await signerB.getAccounts();\r\n\t\t\t\tconst  transientLog = {\r\n\t\t\t\t\tlog: (msg) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinfo: (msg) => {\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\twarn: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tverbose: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdebug: (msg) => {\r\n\r\n\t\t\t\t\t\t//commit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t\tconst optionsA = {\r\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(rootGetters['common/wallet/gasPrice']),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(\r\n\t\t\t\t\trootGetters['common/env/apiTendermint']\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientA = new StarportSigningClient(\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\tsignerA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdA = await signingClientA.getChainId();\r\n\t\t\t\tconst optionsB = {\r\n\t\t\t\t\tprefix: relayer.prefix,\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(\r\n\t\t\t\t\trelayer.endpoint\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientB = new StarportSigningClient(\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\tsignerB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdB = await signingClientB.getChainId();\r\n\t\t\r\n\t\t\t\tlet clientA = new IbcClient(\r\n\t\t\t\t\tsigningClientA,\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\taccountA.address,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tlet clientB = new IbcClient(\r\n\t\t\t\t\tsigningClientB,\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\taccountB.address,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst link = await Link.createWithExistingConnections(clientA, clientB,relayer.endA.connectionID,relayer.endB.connectionID)\r\n\t\t\t\tconst linkData = {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tlink,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\tendA: {\r\n\t\t\t\t\t\tclientID: link.endA.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endA.connectionID\r\n\t\t\t\t\t},\r\n\t\t\t\t\tendB: {\r\n\t\t\t\t\t\tclientID: link.endB.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endB.connectionID\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcommit('LINK_RELAYER',linkData)\r\n\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\t\tif (relayer.status!='connected') {\r\n\t\t\t\t\tawait dispatch('connectRelayer',relayer.name)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif (relayer.running) {\r\n\t\t\t\t\t\tdispatch('runRelayer',relayer.name)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}catch(e) {\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync linkRelayer({commit, rootGetters, getters,dispatch},{name}) {\r\n\t\t\tconst relayer=getters['getRelayer'](name)\r\n\t\t\tif (relayer.status!=='created') {\r\n\t\t\t\tthrow new SpVuexError(\r\n\t\t\t\t\t'relayers:connectRelayer',\r\n\t\t\t\t\t'Relayer already connected.'\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trootGetters['common/env/addrPrefix']\r\n\t\t\t\t);\r\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trelayer.prefix\r\n\t\t\t\t);\r\n\t\t\t\tconst [accountA] = await signerA.getAccounts();\r\n\t\t\t\tconst [accountB] = await signerB.getAccounts();\r\n\t\t\t\tconst  transientLog = {\r\n\t\t\t\t\tlog: (msg) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinfo: (msg) => {\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\twarn: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tverbose: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdebug: (msg) => {\r\n\r\n\t\t\t\t\t\t//commit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t\tconst optionsA = {\r\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(rootGetters['common/wallet/gasPrice']),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(\r\n\t\t\t\t\trootGetters['common/env/apiTendermint']\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientA = new StarportSigningClient(\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\tsignerA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdA = await signingClientA.getChainId();\r\n\t\t\t\tconst optionsB = {\r\n\t\t\t\t\tprefix: relayer.prefix,\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(\r\n\t\t\t\t\trelayer.endpoint\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientB = new StarportSigningClient(\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\tsignerB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdB = await signingClientB.getChainId();\r\n\t\t\r\n\t\t\t\tlet clientA = new IbcClient(\r\n\t\t\t\t\tsigningClientA,\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\taccountA.address,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tlet clientB = new IbcClient(\r\n\t\t\t\t\tsigningClientB,\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\taccountB.address,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst link = await Link.createWithNewConnections(clientA, clientB);\r\n\t\t\t\tconst linkData = {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tlink,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\tendA: {\r\n\t\t\t\t\t\tclientID: link.endA.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endA.connectionID\r\n\t\t\t\t\t},\r\n\t\t\t\t\tendB: {\r\n\t\t\t\t\t\tclientID: link.endB.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endB.connectionID\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcommit('LINK_RELAYER',linkData)\r\n\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\t\tawait dispatch('connectRelayer',name)\r\n\t\t\t}catch(e) {\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync connectRelayer({commit, getters,dispatch}, name) {\r\n\t\t\tconst relayerLink=getters['getRelayerLink'](name)\r\n\t\t\tconst channels = await relayerLink.createChannel(\r\n\t\t\t\t\"A\",\r\n\t\t\t\t\"transfer\",\r\n\t\t\t\t\"transfer\",\r\n\t\t\t\t1,\r\n\t\t\t\t\"ics20-1\"\r\n\t\t\t);\r\n\t\t\tconst channelData = {\r\n\t\t\t\tname,\r\n\t\t\t\t...channels\r\n\t\t\t}\r\n\t\t\tcommit(\"CONNECT_RELAYER\",channelData)\r\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\tdispatch('runRelayer',name)\r\n\t\t},\r\n\t\tasync runRelayer({commit,getters,dispatch},name) {\r\n\t\t\tconst relayerLink=getters['getRelayerLink'](name)\r\n\t\t\tcommit(\"RUN_RELAYER\",name)\r\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\tdispatch('relayerLoop',{name,link: relayerLink,\r\n\t\t\toptions: { poll: 1, maxAgeDest: 86400, maxAgeSrc: 86400 }})\r\n\t\t},\r\n\t\tasync stopRelayer({commit},name) {\r\n\t\t\tcommit(\"STOP_RELAYER\",name)\r\n\t\t},\r\n\t\tasync relayerLoop({ getters,commit,dispatch }, { name, link, options }) {\r\n\t\t\tlet relayer=getters['getRelayer'](name)\r\n\t\t\tlet nextRelay = relayer.heights ?? {};\r\n\t\t\twhile (getters['getRelayer'](name).running) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// TODO: make timeout windows more configurable\r\n\t\t\t\t\tnextRelay = await link.checkAndRelayPacketsAndAcks(nextRelay, 2, 6);\r\n\t\t\t\t\tcommit(\"LAST_QUERIED_HEIGHTS\", {name,heights: nextRelay})\r\n\t\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\t\t\tawait link.updateClientIfStale(\"A\", options.maxAgeDest);\r\n\t\t\t\t\tawait link.updateClientIfStale(\"B\", options.maxAgeSrc);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error(`Caught error: `, e);\r\n\t\t\t\t}\r\n\t\t\t\tawait sleep(options.poll * 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"file":"relayers.js"}