{"version":3,"sources":["../../../../src/modules/common/blocks/blocks.js"],"names":["formatTx","txHash","messages","memo","signer_infos","fee","gas_used","gas_wanted","height","code","log","body","auth_info","meta","getTx","apiCosmos","apiTendermint","encodedTx","Buffer","from","axios","get","rpcRes","apiRes","toUpperCase","decodeTx","fullTx","data","result","tx_result","tx","namespaced","state","blocks","size","getters","getBlocks","howmany","sort","a","b","slice","getBlockByHeight","find","x","mutations","ADD_BLOCK","block","push","length","shift","RESET_STATE","SET_SIZE","actions","init","dispatch","rootGetters","on","addBlock","blockData","commit","value","header","blockDetails","txDecoded","txs","map","dec","Promise","all","timestamp","time","hash","block_id","details","SpVuexError","resetState"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { sha256 } from 'js-sha256'\r\n\r\nfunction formatTx({\r\n\ttxHash = '',\r\n\tmessages = [],\r\n\tmemo = '',\r\n\tsigner_infos = [],\r\n\tfee = {},\r\n\tgas_used = null,\r\n\tgas_wanted = null,\r\n\theight = null,\r\n\tcode = 0,\r\n\tlog = null\r\n}) {\r\n\treturn {\r\n\t\ttxHash,\r\n\t\tbody: {\r\n\t\t\tmessages,\r\n\t\t\tmemo\r\n\t\t},\r\n\t\tauth_info: {\r\n\t\t\tsigner_infos,\r\n\t\t\tfee\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\tgas_used,\r\n\t\t\tgas_wanted,\r\n\t\t\theight,\r\n\t\t\tcode,\r\n\t\t\tlog\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function getTx(apiCosmos, apiTendermint, encodedTx) {\r\n\tconst txHash = sha256(Buffer.from(encodedTx, 'base64'))\r\n\ttry {\r\n\t\tconst rpcRes = await axios.get(apiTendermint + '/tx?hash=0x' + txHash)\r\n\t\tconst apiRes = await axios.get(\r\n\t\t\tapiCosmos + '/cosmos/tx/v1beta1/txs/' + txHash\r\n\t\t)\r\n\t\treturn { rpcRes, apiRes, txHash: txHash.toUpperCase() }\r\n\t} catch (e) {\r\n\t\tthrow 'Error fetching TX data'\r\n\t}\r\n}\r\nasync function decodeTx(apiCosmos, apiTendermint, encodedTx) {\r\n\tconst fullTx = await getTx(apiCosmos, apiTendermint, encodedTx)\r\n\tconst { data } = fullTx.rpcRes\r\n\tconst { height, tx_result } = data.result\r\n\tconst { code, log, gas_used, gas_wanted } = tx_result\r\n\tconst { body, auth_info } = fullTx.apiRes.data.tx\r\n\tconst { messages, memo } = body\r\n\r\n\treturn formatTx({\r\n\t\ttxHash: fullTx.txHash,\r\n\t\tmessages,\r\n\t\tmemo,\r\n\t\tsigner_infos: auth_info.signer_infos,\r\n\t\tfee: auth_info.fee,\r\n\t\tgas_used,\r\n\t\tgas_wanted,\r\n\t\theight,\r\n\t\tcode,\r\n\t\tlog\r\n\t})\r\n}\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate() {\r\n\t\treturn {\r\n\t\t\tblocks: [],\r\n\t\t\tsize: 20\r\n\t\t}\r\n\t},\r\n\tgetters: {\r\n\t\tgetBlocks: (state) => (howmany) => {\r\n\t\t\treturn [...state.blocks]\r\n\t\t\t\t.sort((a, b) => b.height - a.height)\r\n\t\t\t\t.slice(0, howmany)\r\n\t\t},\r\n\t\tgetBlockByHeight: (state) => (height) => {\r\n\t\t\treturn state.blocks.find((x) => x.height == height) || {}\r\n\t\t}\r\n\t},\r\n\tmutations: {\r\n\t\tADD_BLOCK(state, block) {\r\n\t\t\tstate.blocks.push(block)\r\n\t\t\tif (state.blocks.length > state.size) {\r\n\t\t\t\tstate.blocks.shift()\r\n\t\t\t}\r\n\t\t},\r\n\t\tRESET_STATE(state) {\r\n\t\t\tstate.blocks = []\r\n\t\t},\r\n\t\tSET_SIZE(state, size) {\r\n\t\t\tstate.size = size\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\t\tinit({ dispatch, rootGetters }) {\r\n\t\t\tif (rootGetters['common/env/client']) {\r\n\t\t\t\trootGetters['common/env/client'].on('newblock', (data) => {\r\n\t\t\t\t\tdispatch('addBlock', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync addBlock({ commit, rootGetters }, blockData) {\r\n\t\t\ttry {\r\n\t\t\t\tconst blockDetails = await axios.get(\r\n\t\t\t\t\trootGetters['common/env/apiTendermint'] +\r\n\t\t\t\t\t\t'/block?height=' +\r\n\t\t\t\t\t\tblockData.data.value.block.header.height\r\n\t\t\t\t)\r\n\t\t\t\tconst txDecoded = blockData.data.value.block.data.txs.map(\r\n\t\t\t\t\tasync (tx) => {\r\n\t\t\t\t\t\tconst dec = await decodeTx(\r\n\t\t\t\t\t\t\trootGetters['common/env/apiCosmos'],\r\n\t\t\t\t\t\t\trootGetters['common/env/apiTendermint'],\r\n\t\t\t\t\t\t\ttx\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\treturn dec\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tconst txs = await Promise.all(txDecoded)\r\n\r\n\t\t\t\tconst block = {\r\n\t\t\t\t\theight: blockData.data.value.block.header.height,\r\n\t\t\t\t\ttimestamp: blockData.data.value.block.header.time,\r\n\t\t\t\t\thash: blockDetails.data.result.block_id.hash,\r\n\t\t\t\t\tdetails: blockData.data.value.block,\r\n\t\t\t\t\ttxDecoded: txs\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcommit('ADD_BLOCK', block)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow new SpVuexError('Blocks:AddBlock','Could not add block. RPC node unavailable')\r\n\t\t\t}\r\n\t\t},\r\n\t\tresetState({ commit }) {\r\n\t\t\tcommit('RESET_STATE')\r\n\t\t}\r\n\t}\r\n}\r\n"],"file":"blocks.js"}