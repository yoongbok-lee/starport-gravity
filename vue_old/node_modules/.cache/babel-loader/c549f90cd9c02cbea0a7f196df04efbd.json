{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","mtime":1620801165471},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js"],"names":["voteOptionFromJSON","voteOptionToJSON","Reader","util","configure","Writer","Long","Any","Coin","protobufPackage","baseMsgSubmitProposal","proposer","MsgSubmitProposal","encode","message","writer","create","content","undefined","uint32","fork","ldelim","initialDeposit","v","string","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","skipType","fromJSON","object","e","String","toJSON","obj","map","fromPartial","baseMsgSubmitProposalResponse","proposalId","MsgSubmitProposalResponse","uint64","longToNumber","Number","baseMsgVote","voter","option","MsgVote","int32","baseMsgVoteResponse","MsgVoteResponse","_","baseMsgDeposit","depositor","MsgDeposit","amount","baseMsgDepositResponse","MsgDepositResponse","MsgClientImpl","rpc","request","data","finish","promise","then","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}