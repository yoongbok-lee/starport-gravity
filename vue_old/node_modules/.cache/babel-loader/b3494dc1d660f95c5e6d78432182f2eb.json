{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","mtime":1620801165451},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js"],"names":["Params","Metadata","Coin","Writer","Reader","protobufPackage","baseGenesisState","GenesisState","encode","message","writer","create","params","undefined","uint32","fork","ldelim","balances","v","Balance","supply","denomMetadata","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","skipType","fromJSON","object","e","toJSON","obj","map","fromPartial","baseBalance","address","string","coins","String"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n"]}]}