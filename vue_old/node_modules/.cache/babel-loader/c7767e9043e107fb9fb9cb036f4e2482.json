{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","mtime":1620801165451},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js"],"names":["Coin","Writer","Reader","protobufPackage","baseParams","defaultSendEnabled","Params","encode","message","writer","create","sendEnabled","v","SendEnabled","uint32","fork","ldelim","bool","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","push","skipType","fromJSON","object","e","Boolean","toJSON","obj","map","fromPartial","baseSendEnabled","denom","enabled","string","String","baseInput","address","Input","coins","baseOutput","Output","baseSupply","Supply","total","baseDenomUnit","exponent","aliases","DenomUnit","Number","baseMetadata","description","base","display","Metadata","denomUnits"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n"]}]}