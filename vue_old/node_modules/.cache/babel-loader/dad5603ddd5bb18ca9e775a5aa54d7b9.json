{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/althea-net/cosmos-gravity-bridge/gravity.v1/module/types/gravity/types.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/althea-net/cosmos-gravity-bridge/gravity.v1/module/types/gravity/types.js","mtime":1620801165451},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/althea-net/cosmos-gravity-bridge/gravity.v1/module/types/gravity/types.js"],"names":["Long","util","configure","Writer","Reader","protobufPackage","baseBridgeValidator","power","ethereumAddress","BridgeValidator","encode","message","writer","create","uint32","uint64","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","object","Number","String","toJSON","obj","fromPartial","baseValset","nonce","height","Valset","members","v","fork","ldelim","push","e","map","baseLastObservedEthereumBlockHeight","cosmosBlockHeight","ethereumBlockHeight","LastObservedEthereumBlockHeight","baseErc20ToDenom","erc20","denom","Erc20ToDenom","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"gravity.v1\";\nconst baseBridgeValidator = { power: 0, ethereumAddress: \"\" };\nexport const BridgeValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.power !== 0) {\n            writer.uint32(8).uint64(message.power);\n        }\n        if (message.ethereumAddress !== \"\") {\n            writer.uint32(18).string(message.ethereumAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBridgeValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.power = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.ethereumAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBridgeValidator };\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.ethereumAddress !== undefined &&\n            object.ethereumAddress !== null) {\n            message.ethereumAddress = String(object.ethereumAddress);\n        }\n        else {\n            message.ethereumAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.power !== undefined && (obj.power = message.power);\n        message.ethereumAddress !== undefined &&\n            (obj.ethereumAddress = message.ethereumAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBridgeValidator };\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.ethereumAddress !== undefined &&\n            object.ethereumAddress !== null) {\n            message.ethereumAddress = object.ethereumAddress;\n        }\n        else {\n            message.ethereumAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValset = { nonce: 0, height: 0 };\nexport const Valset = {\n    encode(message, writer = Writer.create()) {\n        if (message.nonce !== 0) {\n            writer.uint32(8).uint64(message.nonce);\n        }\n        for (const v of message.members) {\n            BridgeValidator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValset };\n        message.members = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.members.push(BridgeValidator.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValset };\n        message.members = [];\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.members !== undefined && object.members !== null) {\n            for (const e of object.members) {\n                message.members.push(BridgeValidator.fromJSON(e));\n            }\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        if (message.members) {\n            obj.members = message.members.map((e) => e ? BridgeValidator.toJSON(e) : undefined);\n        }\n        else {\n            obj.members = [];\n        }\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValset };\n        message.members = [];\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.members !== undefined && object.members !== null) {\n            for (const e of object.members) {\n                message.members.push(BridgeValidator.fromPartial(e));\n            }\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseLastObservedEthereumBlockHeight = {\n    cosmosBlockHeight: 0,\n    ethereumBlockHeight: 0,\n};\nexport const LastObservedEthereumBlockHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.cosmosBlockHeight !== 0) {\n            writer.uint32(8).uint64(message.cosmosBlockHeight);\n        }\n        if (message.ethereumBlockHeight !== 0) {\n            writer.uint32(16).uint64(message.ethereumBlockHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseLastObservedEthereumBlockHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cosmosBlockHeight = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.ethereumBlockHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseLastObservedEthereumBlockHeight,\n        };\n        if (object.cosmosBlockHeight !== undefined &&\n            object.cosmosBlockHeight !== null) {\n            message.cosmosBlockHeight = Number(object.cosmosBlockHeight);\n        }\n        else {\n            message.cosmosBlockHeight = 0;\n        }\n        if (object.ethereumBlockHeight !== undefined &&\n            object.ethereumBlockHeight !== null) {\n            message.ethereumBlockHeight = Number(object.ethereumBlockHeight);\n        }\n        else {\n            message.ethereumBlockHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cosmosBlockHeight !== undefined &&\n            (obj.cosmosBlockHeight = message.cosmosBlockHeight);\n        message.ethereumBlockHeight !== undefined &&\n            (obj.ethereumBlockHeight = message.ethereumBlockHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseLastObservedEthereumBlockHeight,\n        };\n        if (object.cosmosBlockHeight !== undefined &&\n            object.cosmosBlockHeight !== null) {\n            message.cosmosBlockHeight = object.cosmosBlockHeight;\n        }\n        else {\n            message.cosmosBlockHeight = 0;\n        }\n        if (object.ethereumBlockHeight !== undefined &&\n            object.ethereumBlockHeight !== null) {\n            message.ethereumBlockHeight = object.ethereumBlockHeight;\n        }\n        else {\n            message.ethereumBlockHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseErc20ToDenom = { erc20: \"\", denom: \"\" };\nexport const Erc20ToDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.erc20 !== \"\") {\n            writer.uint32(10).string(message.erc20);\n        }\n        if (message.denom !== \"\") {\n            writer.uint32(18).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseErc20ToDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.erc20 = reader.string();\n                    break;\n                case 2:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseErc20ToDenom };\n        if (object.erc20 !== undefined && object.erc20 !== null) {\n            message.erc20 = String(object.erc20);\n        }\n        else {\n            message.erc20 = \"\";\n        }\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.erc20 !== undefined && (obj.erc20 = message.erc20);\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseErc20ToDenom };\n        if (object.erc20 !== undefined && object.erc20 !== null) {\n            message.erc20 = object.erc20;\n        }\n        else {\n            message.erc20 = \"\";\n        }\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}