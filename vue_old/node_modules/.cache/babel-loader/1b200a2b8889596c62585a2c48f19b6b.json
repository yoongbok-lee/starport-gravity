{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","mtime":1620801165467},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js"],"names":["Long","util","configure","Writer","Reader","DecCoin","Coin","protobufPackage","baseParams","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","Params","encode","message","writer","create","uint32","string","bool","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","Boolean","toJSON","obj","fromPartial","baseValidatorHistoricalRewards","referenceCount","ValidatorHistoricalRewards","cumulativeRewardRatio","v","fork","ldelim","push","e","Number","map","baseValidatorCurrentRewards","period","ValidatorCurrentRewards","rewards","uint64","longToNumber","baseValidatorAccumulatedCommission","ValidatorAccumulatedCommission","commission","baseValidatorOutstandingRewards","ValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","ValidatorSlashEvent","baseValidatorSlashEvents","ValidatorSlashEvents","validatorSlashEvents","baseFeePool","FeePool","communityPool","baseCommunityPoolSpendProposal","title","description","recipient","CommunityPoolSpendProposal","amount","baseDelegatorStartingInfo","previousPeriod","stake","height","DelegatorStartingInfo","baseDelegationDelegatorReward","validatorAddress","DelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","CommunityPoolSpendProposalWithDeposit","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}