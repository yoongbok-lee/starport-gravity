{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","mtime":1620801165491},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js"],"names":["Reader","util","configure","Writer","Long","Channel","Packet","Height","protobufPackage","baseMsgChannelOpenInit","portId","signer","MsgChannelOpenInit","encode","message","writer","create","uint32","string","channel","undefined","fork","ldelim","decode","input","length","reader","Uint8Array","end","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgChannelOpenInitResponse","MsgChannelOpenInitResponse","_","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","MsgChannelOpenTry","proofInit","bytes","proofHeight","bytesFromBase64","base64FromBytes","baseMsgChannelOpenTryResponse","MsgChannelOpenTryResponse","baseMsgChannelOpenAck","channelId","counterpartyChannelId","MsgChannelOpenAck","proofTry","baseMsgChannelOpenAckResponse","MsgChannelOpenAckResponse","baseMsgChannelOpenConfirm","MsgChannelOpenConfirm","proofAck","baseMsgChannelOpenConfirmResponse","MsgChannelOpenConfirmResponse","baseMsgChannelCloseInit","MsgChannelCloseInit","baseMsgChannelCloseInitResponse","MsgChannelCloseInitResponse","baseMsgChannelCloseConfirm","MsgChannelCloseConfirm","baseMsgChannelCloseConfirmResponse","MsgChannelCloseConfirmResponse","baseMsgRecvPacket","MsgRecvPacket","packet","proofCommitment","baseMsgRecvPacketResponse","MsgRecvPacketResponse","baseMsgTimeout","nextSequenceRecv","MsgTimeout","proofUnreceived","uint64","longToNumber","Number","baseMsgTimeoutResponse","MsgTimeoutResponse","baseMsgTimeoutOnClose","MsgTimeoutOnClose","proofClose","baseMsgTimeoutOnCloseResponse","MsgTimeoutOnCloseResponse","baseMsgAcknowledgement","MsgAcknowledgement","acknowledgement","proofAcked","baseMsgAcknowledgementResponse","MsgAcknowledgementResponse","MsgClientImpl","rpc","request","data","finish","promise","then","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}