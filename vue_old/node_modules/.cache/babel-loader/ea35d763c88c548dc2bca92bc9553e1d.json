{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","mtime":1620801165491},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvdWJ1bnR1L3N0YXJwb3J0LWdyYXZpdHkvdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL3VidW50dS9zdGFycG9ydC1ncmF2aXR5L3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS1idWZmZXIuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLWpzb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLnRvLWpzb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLm1heC1zYWZlLWludGVnZXIuanMiOwoKLyogZXNsaW50LWRpc2FibGUgKi8KaW1wb3J0ICogYXMgTG9uZyBmcm9tICJsb25nIjsKaW1wb3J0IHsgdXRpbCwgY29uZmlndXJlLCBXcml0ZXIsIFJlYWRlciB9IGZyb20gInByb3RvYnVmanMvbWluaW1hbCI7CmltcG9ydCB7IEhlaWdodCB9IGZyb20gIi4uLy4uLy4uLy4uL2liYy9jb3JlL2NsaWVudC92MS9jbGllbnQiOwpleHBvcnQgdmFyIHByb3RvYnVmUGFja2FnZSA9ICJpYmMuY29yZS5jaGFubmVsLnYxIjsKLyoqCiAqIFN0YXRlIGRlZmluZXMgaWYgYSBjaGFubmVsIGlzIGluIG9uZSBvZiB0aGUgZm9sbG93aW5nIHN0YXRlczoKICogQ0xPU0VELCBJTklULCBUUllPUEVOLCBPUEVOIG9yIFVOSU5JVElBTElaRUQuCiAqLwoKZXhwb3J0IHZhciBTdGF0ZTsKCihmdW5jdGlvbiAoU3RhdGUpIHsKICAvKiogU1RBVEVfVU5JTklUSUFMSVpFRF9VTlNQRUNJRklFRCAtIERlZmF1bHQgU3RhdGUgKi8KICBTdGF0ZVtTdGF0ZVsiU1RBVEVfVU5JTklUSUFMSVpFRF9VTlNQRUNJRklFRCJdID0gMF0gPSAiU1RBVEVfVU5JTklUSUFMSVpFRF9VTlNQRUNJRklFRCI7CiAgLyoqIFNUQVRFX0lOSVQgLSBBIGNoYW5uZWwgaGFzIGp1c3Qgc3RhcnRlZCB0aGUgb3BlbmluZyBoYW5kc2hha2UuICovCgogIFN0YXRlW1N0YXRlWyJTVEFURV9JTklUIl0gPSAxXSA9ICJTVEFURV9JTklUIjsKICAvKiogU1RBVEVfVFJZT1BFTiAtIEEgY2hhbm5lbCBoYXMgYWNrbm93bGVkZ2VkIHRoZSBoYW5kc2hha2Ugc3RlcCBvbiB0aGUgY291bnRlcnBhcnR5IGNoYWluLiAqLwoKICBTdGF0ZVtTdGF0ZVsiU1RBVEVfVFJZT1BFTiJdID0gMl0gPSAiU1RBVEVfVFJZT1BFTiI7CiAgLyoqCiAgICogU1RBVEVfT1BFTiAtIEEgY2hhbm5lbCBoYXMgY29tcGxldGVkIHRoZSBoYW5kc2hha2UuIE9wZW4gY2hhbm5lbHMgYXJlCiAgICogcmVhZHkgdG8gc2VuZCBhbmQgcmVjZWl2ZSBwYWNrZXRzLgogICAqLwoKICBTdGF0ZVtTdGF0ZVsiU1RBVEVfT1BFTiJdID0gM10gPSAiU1RBVEVfT1BFTiI7CiAgLyoqCiAgICogU1RBVEVfQ0xPU0VEIC0gQSBjaGFubmVsIGhhcyBiZWVuIGNsb3NlZCBhbmQgY2FuIG5vIGxvbmdlciBiZSB1c2VkIHRvIHNlbmQgb3IgcmVjZWl2ZQogICAqIHBhY2tldHMuCiAgICovCgogIFN0YXRlW1N0YXRlWyJTVEFURV9DTE9TRUQiXSA9IDRdID0gIlNUQVRFX0NMT1NFRCI7CiAgU3RhdGVbU3RhdGVbIlVOUkVDT0dOSVpFRCJdID0gLTFdID0gIlVOUkVDT0dOSVpFRCI7Cn0pKFN0YXRlIHx8IChTdGF0ZSA9IHt9KSk7CgpleHBvcnQgZnVuY3Rpb24gc3RhdGVGcm9tSlNPTihvYmplY3QpIHsKICBzd2l0Y2ggKG9iamVjdCkgewogICAgY2FzZSAwOgogICAgY2FzZSAiU1RBVEVfVU5JTklUSUFMSVpFRF9VTlNQRUNJRklFRCI6CiAgICAgIHJldHVybiBTdGF0ZS5TVEFURV9VTklOSVRJQUxJWkVEX1VOU1BFQ0lGSUVEOwoKICAgIGNhc2UgMToKICAgIGNhc2UgIlNUQVRFX0lOSVQiOgogICAgICByZXR1cm4gU3RhdGUuU1RBVEVfSU5JVDsKCiAgICBjYXNlIDI6CiAgICBjYXNlICJTVEFURV9UUllPUEVOIjoKICAgICAgcmV0dXJuIFN0YXRlLlNUQVRFX1RSWU9QRU47CgogICAgY2FzZSAzOgogICAgY2FzZSAiU1RBVEVfT1BFTiI6CiAgICAgIHJldHVybiBTdGF0ZS5TVEFURV9PUEVOOwoKICAgIGNhc2UgNDoKICAgIGNhc2UgIlNUQVRFX0NMT1NFRCI6CiAgICAgIHJldHVybiBTdGF0ZS5TVEFURV9DTE9TRUQ7CgogICAgY2FzZSAtMToKICAgIGNhc2UgIlVOUkVDT0dOSVpFRCI6CiAgICBkZWZhdWx0OgogICAgICByZXR1cm4gU3RhdGUuVU5SRUNPR05JWkVEOwogIH0KfQpleHBvcnQgZnVuY3Rpb24gc3RhdGVUb0pTT04ob2JqZWN0KSB7CiAgc3dpdGNoIChvYmplY3QpIHsKICAgIGNhc2UgU3RhdGUuU1RBVEVfVU5JTklUSUFMSVpFRF9VTlNQRUNJRklFRDoKICAgICAgcmV0dXJuICJTVEFURV9VTklOSVRJQUxJWkVEX1VOU1BFQ0lGSUVEIjsKCiAgICBjYXNlIFN0YXRlLlNUQVRFX0lOSVQ6CiAgICAgIHJldHVybiAiU1RBVEVfSU5JVCI7CgogICAgY2FzZSBTdGF0ZS5TVEFURV9UUllPUEVOOgogICAgICByZXR1cm4gIlNUQVRFX1RSWU9QRU4iOwoKICAgIGNhc2UgU3RhdGUuU1RBVEVfT1BFTjoKICAgICAgcmV0dXJuICJTVEFURV9PUEVOIjsKCiAgICBjYXNlIFN0YXRlLlNUQVRFX0NMT1NFRDoKICAgICAgcmV0dXJuICJTVEFURV9DTE9TRUQiOwoKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiAiVU5LTk9XTiI7CiAgfQp9Ci8qKiBPcmRlciBkZWZpbmVzIGlmIGEgY2hhbm5lbCBpcyBPUkRFUkVEIG9yIFVOT1JERVJFRCAqLwoKZXhwb3J0IHZhciBPcmRlcjsKCihmdW5jdGlvbiAoT3JkZXIpIHsKICAvKiogT1JERVJfTk9ORV9VTlNQRUNJRklFRCAtIHplcm8tdmFsdWUgZm9yIGNoYW5uZWwgb3JkZXJpbmcgKi8KICBPcmRlcltPcmRlclsiT1JERVJfTk9ORV9VTlNQRUNJRklFRCJdID0gMF0gPSAiT1JERVJfTk9ORV9VTlNQRUNJRklFRCI7CiAgLyoqCiAgICogT1JERVJfVU5PUkRFUkVEIC0gcGFja2V0cyBjYW4gYmUgZGVsaXZlcmVkIGluIGFueSBvcmRlciwgd2hpY2ggbWF5IGRpZmZlciBmcm9tIHRoZSBvcmRlciBpbgogICAqIHdoaWNoIHRoZXkgd2VyZSBzZW50LgogICAqLwoKICBPcmRlcltPcmRlclsiT1JERVJfVU5PUkRFUkVEIl0gPSAxXSA9ICJPUkRFUl9VTk9SREVSRUQiOwogIC8qKiBPUkRFUl9PUkRFUkVEIC0gcGFja2V0cyBhcmUgZGVsaXZlcmVkIGV4YWN0bHkgaW4gdGhlIG9yZGVyIHdoaWNoIHRoZXkgd2VyZSBzZW50ICovCgogIE9yZGVyW09yZGVyWyJPUkRFUl9PUkRFUkVEIl0gPSAyXSA9ICJPUkRFUl9PUkRFUkVEIjsKICBPcmRlcltPcmRlclsiVU5SRUNPR05JWkVEIl0gPSAtMV0gPSAiVU5SRUNPR05JWkVEIjsKfSkoT3JkZXIgfHwgKE9yZGVyID0ge30pKTsKCmV4cG9ydCBmdW5jdGlvbiBvcmRlckZyb21KU09OKG9iamVjdCkgewogIHN3aXRjaCAob2JqZWN0KSB7CiAgICBjYXNlIDA6CiAgICBjYXNlICJPUkRFUl9OT05FX1VOU1BFQ0lGSUVEIjoKICAgICAgcmV0dXJuIE9yZGVyLk9SREVSX05PTkVfVU5TUEVDSUZJRUQ7CgogICAgY2FzZSAxOgogICAgY2FzZSAiT1JERVJfVU5PUkRFUkVEIjoKICAgICAgcmV0dXJuIE9yZGVyLk9SREVSX1VOT1JERVJFRDsKCiAgICBjYXNlIDI6CiAgICBjYXNlICJPUkRFUl9PUkRFUkVEIjoKICAgICAgcmV0dXJuIE9yZGVyLk9SREVSX09SREVSRUQ7CgogICAgY2FzZSAtMToKICAgIGNhc2UgIlVOUkVDT0dOSVpFRCI6CiAgICBkZWZhdWx0OgogICAgICByZXR1cm4gT3JkZXIuVU5SRUNPR05JWkVEOwogIH0KfQpleHBvcnQgZnVuY3Rpb24gb3JkZXJUb0pTT04ob2JqZWN0KSB7CiAgc3dpdGNoIChvYmplY3QpIHsKICAgIGNhc2UgT3JkZXIuT1JERVJfTk9ORV9VTlNQRUNJRklFRDoKICAgICAgcmV0dXJuICJPUkRFUl9OT05FX1VOU1BFQ0lGSUVEIjsKCiAgICBjYXNlIE9yZGVyLk9SREVSX1VOT1JERVJFRDoKICAgICAgcmV0dXJuICJPUkRFUl9VTk9SREVSRUQiOwoKICAgIGNhc2UgT3JkZXIuT1JERVJfT1JERVJFRDoKICAgICAgcmV0dXJuICJPUkRFUl9PUkRFUkVEIjsKCiAgICBkZWZhdWx0OgogICAgICByZXR1cm4gIlVOS05PV04iOwogIH0KfQp2YXIgYmFzZUNoYW5uZWwgPSB7CiAgc3RhdGU6IDAsCiAgb3JkZXJpbmc6IDAsCiAgY29ubmVjdGlvbkhvcHM6ICIiLAogIHZlcnNpb246ICIiCn07CmV4cG9ydCB2YXIgQ2hhbm5lbCA9IHsKICBlbmNvZGU6IGZ1bmN0aW9uIGVuY29kZShtZXNzYWdlKSB7CiAgICB2YXIgd3JpdGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBXcml0ZXIuY3JlYXRlKCk7CgogICAgaWYgKG1lc3NhZ2Uuc3RhdGUgIT09IDApIHsKICAgICAgd3JpdGVyLnVpbnQzMig4KS5pbnQzMihtZXNzYWdlLnN0YXRlKTsKICAgIH0KCiAgICBpZiAobWVzc2FnZS5vcmRlcmluZyAhPT0gMCkgewogICAgICB3cml0ZXIudWludDMyKDE2KS5pbnQzMihtZXNzYWdlLm9yZGVyaW5nKTsKICAgIH0KCiAgICBpZiAobWVzc2FnZS5jb3VudGVycGFydHkgIT09IHVuZGVmaW5lZCkgewogICAgICBDb3VudGVycGFydHkuZW5jb2RlKG1lc3NhZ2UuY291bnRlcnBhcnR5LCB3cml0ZXIudWludDMyKDI2KS5mb3JrKCkpLmxkZWxpbSgpOwogICAgfQoKICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzKSwKICAgICAgICBfc3RlcDsKCiAgICB0cnkgewogICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgIHZhciB2ID0gX3N0ZXAudmFsdWU7CiAgICAgICAgd3JpdGVyLnVpbnQzMigzNCkuc3RyaW5nKHYpOwogICAgICB9CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvci5mKCk7CiAgICB9CgogICAgaWYgKG1lc3NhZ2UudmVyc2lvbiAhPT0gIiIpIHsKICAgICAgd3JpdGVyLnVpbnQzMig0Mikuc3RyaW5nKG1lc3NhZ2UudmVyc2lvbik7CiAgICB9CgogICAgcmV0dXJuIHdyaXRlcjsKICB9LAogIGRlY29kZTogZnVuY3Rpb24gZGVjb2RlKGlucHV0LCBsZW5ndGgpIHsKICAgIHZhciByZWFkZXIgPSBpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPyBuZXcgUmVhZGVyKGlucHV0KSA6IGlucHV0OwogICAgdmFyIGVuZCA9IGxlbmd0aCA9PT0gdW5kZWZpbmVkID8gcmVhZGVyLmxlbiA6IHJlYWRlci5wb3MgKyBsZW5ndGg7CgogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlQ2hhbm5lbCk7CgogICAgbWVzc2FnZS5jb25uZWN0aW9uSG9wcyA9IFtdOwoKICAgIHdoaWxlIChyZWFkZXIucG9zIDwgZW5kKSB7CiAgICAgIHZhciB0YWcgPSByZWFkZXIudWludDMyKCk7CgogICAgICBzd2l0Y2ggKHRhZyA+Pj4gMykgewogICAgICAgIGNhc2UgMToKICAgICAgICAgIG1lc3NhZ2Uuc3RhdGUgPSByZWFkZXIuaW50MzIoKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDI6CiAgICAgICAgICBtZXNzYWdlLm9yZGVyaW5nID0gcmVhZGVyLmludDMyKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAzOgogICAgICAgICAgbWVzc2FnZS5jb3VudGVycGFydHkgPSBDb3VudGVycGFydHkuZGVjb2RlKHJlYWRlciwgcmVhZGVyLnVpbnQzMigpKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzLnB1c2gocmVhZGVyLnN0cmluZygpKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDU6CiAgICAgICAgICBtZXNzYWdlLnZlcnNpb24gPSByZWFkZXIuc3RyaW5nKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJlYWRlci5za2lwVHlwZSh0YWcgJiA3KTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfSwKICBmcm9tSlNPTjogZnVuY3Rpb24gZnJvbUpTT04ob2JqZWN0KSB7CiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VDaGFubmVsKTsKCiAgICBtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzID0gW107CgogICAgaWYgKG9iamVjdC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5zdGF0ZSAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnN0YXRlID0gc3RhdGVGcm9tSlNPTihvYmplY3Quc3RhdGUpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5zdGF0ZSA9IDA7CiAgICB9CgogICAgaWYgKG9iamVjdC5vcmRlcmluZyAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5vcmRlcmluZyAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLm9yZGVyaW5nID0gb3JkZXJGcm9tSlNPTihvYmplY3Qub3JkZXJpbmcpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5vcmRlcmluZyA9IDA7CiAgICB9CgogICAgaWYgKG9iamVjdC5jb3VudGVycGFydHkgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QuY291bnRlcnBhcnR5ICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuY291bnRlcnBhcnR5ID0gQ291bnRlcnBhcnR5LmZyb21KU09OKG9iamVjdC5jb3VudGVycGFydHkpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5jb3VudGVycGFydHkgPSB1bmRlZmluZWQ7CiAgICB9CgogICAgaWYgKG9iamVjdC5jb25uZWN0aW9uSG9wcyAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5jb25uZWN0aW9uSG9wcyAhPT0gbnVsbCkgewogICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG9iamVjdC5jb25uZWN0aW9uSG9wcyksCiAgICAgICAgICBfc3RlcDI7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgZSA9IF9zdGVwMi52YWx1ZTsKICAgICAgICAgIG1lc3NhZ2UuY29ubmVjdGlvbkhvcHMucHVzaChTdHJpbmcoZSkpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgIH0KICAgIH0KCiAgICBpZiAob2JqZWN0LnZlcnNpb24gIT09IHVuZGVmaW5lZCAmJiBvYmplY3QudmVyc2lvbiAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnZlcnNpb24gPSBTdHJpbmcob2JqZWN0LnZlcnNpb24pOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS52ZXJzaW9uID0gIiI7CiAgICB9CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfSwKICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTihtZXNzYWdlKSB7CiAgICB2YXIgb2JqID0ge307CiAgICBtZXNzYWdlLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgKG9iai5zdGF0ZSA9IHN0YXRlVG9KU09OKG1lc3NhZ2Uuc3RhdGUpKTsKICAgIG1lc3NhZ2Uub3JkZXJpbmcgIT09IHVuZGVmaW5lZCAmJiAob2JqLm9yZGVyaW5nID0gb3JkZXJUb0pTT04obWVzc2FnZS5vcmRlcmluZykpOwogICAgbWVzc2FnZS5jb3VudGVycGFydHkgIT09IHVuZGVmaW5lZCAmJiAob2JqLmNvdW50ZXJwYXJ0eSA9IG1lc3NhZ2UuY291bnRlcnBhcnR5ID8gQ291bnRlcnBhcnR5LnRvSlNPTihtZXNzYWdlLmNvdW50ZXJwYXJ0eSkgOiB1bmRlZmluZWQpOwoKICAgIGlmIChtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzKSB7CiAgICAgIG9iai5jb25uZWN0aW9uSG9wcyA9IG1lc3NhZ2UuY29ubmVjdGlvbkhvcHMubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGU7CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgb2JqLmNvbm5lY3Rpb25Ib3BzID0gW107CiAgICB9CgogICAgbWVzc2FnZS52ZXJzaW9uICE9PSB1bmRlZmluZWQgJiYgKG9iai52ZXJzaW9uID0gbWVzc2FnZS52ZXJzaW9uKTsKICAgIHJldHVybiBvYmo7CiAgfSwKICBmcm9tUGFydGlhbDogZnVuY3Rpb24gZnJvbVBhcnRpYWwob2JqZWN0KSB7CiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VDaGFubmVsKTsKCiAgICBtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzID0gW107CgogICAgaWYgKG9iamVjdC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5zdGF0ZSAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnN0YXRlID0gb2JqZWN0LnN0YXRlOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5zdGF0ZSA9IDA7CiAgICB9CgogICAgaWYgKG9iamVjdC5vcmRlcmluZyAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5vcmRlcmluZyAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLm9yZGVyaW5nID0gb2JqZWN0Lm9yZGVyaW5nOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5vcmRlcmluZyA9IDA7CiAgICB9CgogICAgaWYgKG9iamVjdC5jb3VudGVycGFydHkgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QuY291bnRlcnBhcnR5ICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuY291bnRlcnBhcnR5ID0gQ291bnRlcnBhcnR5LmZyb21QYXJ0aWFsKG9iamVjdC5jb3VudGVycGFydHkpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5jb3VudGVycGFydHkgPSB1bmRlZmluZWQ7CiAgICB9CgogICAgaWYgKG9iamVjdC5jb25uZWN0aW9uSG9wcyAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5jb25uZWN0aW9uSG9wcyAhPT0gbnVsbCkgewogICAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG9iamVjdC5jb25uZWN0aW9uSG9wcyksCiAgICAgICAgICBfc3RlcDM7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgZSA9IF9zdGVwMy52YWx1ZTsKICAgICAgICAgIG1lc3NhZ2UuY29ubmVjdGlvbkhvcHMucHVzaChlKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjMuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjMuZigpOwogICAgICB9CiAgICB9CgogICAgaWYgKG9iamVjdC52ZXJzaW9uICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnZlcnNpb24gIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS52ZXJzaW9uID0gb2JqZWN0LnZlcnNpb247CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnZlcnNpb24gPSAiIjsKICAgIH0KCiAgICByZXR1cm4gbWVzc2FnZTsKICB9Cn07CnZhciBiYXNlSWRlbnRpZmllZENoYW5uZWwgPSB7CiAgc3RhdGU6IDAsCiAgb3JkZXJpbmc6IDAsCiAgY29ubmVjdGlvbkhvcHM6ICIiLAogIHZlcnNpb246ICIiLAogIHBvcnRJZDogIiIsCiAgY2hhbm5lbElkOiAiIgp9OwpleHBvcnQgdmFyIElkZW50aWZpZWRDaGFubmVsID0gewogIGVuY29kZTogZnVuY3Rpb24gZW5jb2RlKG1lc3NhZ2UpIHsKICAgIHZhciB3cml0ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFdyaXRlci5jcmVhdGUoKTsKCiAgICBpZiAobWVzc2FnZS5zdGF0ZSAhPT0gMCkgewogICAgICB3cml0ZXIudWludDMyKDgpLmludDMyKG1lc3NhZ2Uuc3RhdGUpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLm9yZGVyaW5nICE9PSAwKSB7CiAgICAgIHdyaXRlci51aW50MzIoMTYpLmludDMyKG1lc3NhZ2Uub3JkZXJpbmcpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLmNvdW50ZXJwYXJ0eSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgIENvdW50ZXJwYXJ0eS5lbmNvZGUobWVzc2FnZS5jb3VudGVycGFydHksIHdyaXRlci51aW50MzIoMjYpLmZvcmsoKSkubGRlbGltKCk7CiAgICB9CgogICAgdmFyIF9pdGVyYXRvcjQgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzKSwKICAgICAgICBfc3RlcDQ7CgogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3I0LnMoKTsgIShfc3RlcDQgPSBfaXRlcmF0b3I0Lm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgdiA9IF9zdGVwNC52YWx1ZTsKICAgICAgICB3cml0ZXIudWludDMyKDM0KS5zdHJpbmcodik7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvcjQuZigpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLnZlcnNpb24gIT09ICIiKSB7CiAgICAgIHdyaXRlci51aW50MzIoNDIpLnN0cmluZyhtZXNzYWdlLnZlcnNpb24pOwogICAgfQoKICAgIGlmIChtZXNzYWdlLnBvcnRJZCAhPT0gIiIpIHsKICAgICAgd3JpdGVyLnVpbnQzMig1MCkuc3RyaW5nKG1lc3NhZ2UucG9ydElkKTsKICAgIH0KCiAgICBpZiAobWVzc2FnZS5jaGFubmVsSWQgIT09ICIiKSB7CiAgICAgIHdyaXRlci51aW50MzIoNTgpLnN0cmluZyhtZXNzYWdlLmNoYW5uZWxJZCk7CiAgICB9CgogICAgcmV0dXJuIHdyaXRlcjsKICB9LAogIGRlY29kZTogZnVuY3Rpb24gZGVjb2RlKGlucHV0LCBsZW5ndGgpIHsKICAgIHZhciByZWFkZXIgPSBpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPyBuZXcgUmVhZGVyKGlucHV0KSA6IGlucHV0OwogICAgdmFyIGVuZCA9IGxlbmd0aCA9PT0gdW5kZWZpbmVkID8gcmVhZGVyLmxlbiA6IHJlYWRlci5wb3MgKyBsZW5ndGg7CgogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlSWRlbnRpZmllZENoYW5uZWwpOwoKICAgIG1lc3NhZ2UuY29ubmVjdGlvbkhvcHMgPSBbXTsKCiAgICB3aGlsZSAocmVhZGVyLnBvcyA8IGVuZCkgewogICAgICB2YXIgdGFnID0gcmVhZGVyLnVpbnQzMigpOwoKICAgICAgc3dpdGNoICh0YWcgPj4+IDMpIHsKICAgICAgICBjYXNlIDE6CiAgICAgICAgICBtZXNzYWdlLnN0YXRlID0gcmVhZGVyLmludDMyKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAyOgogICAgICAgICAgbWVzc2FnZS5vcmRlcmluZyA9IHJlYWRlci5pbnQzMigpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIG1lc3NhZ2UuY291bnRlcnBhcnR5ID0gQ291bnRlcnBhcnR5LmRlY29kZShyZWFkZXIsIHJlYWRlci51aW50MzIoKSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA0OgogICAgICAgICAgbWVzc2FnZS5jb25uZWN0aW9uSG9wcy5wdXNoKHJlYWRlci5zdHJpbmcoKSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA1OgogICAgICAgICAgbWVzc2FnZS52ZXJzaW9uID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNjoKICAgICAgICAgIG1lc3NhZ2UucG9ydElkID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNzoKICAgICAgICAgIG1lc3NhZ2UuY2hhbm5lbElkID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgZnJvbUpTT046IGZ1bmN0aW9uIGZyb21KU09OKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlSWRlbnRpZmllZENoYW5uZWwpOwoKICAgIG1lc3NhZ2UuY29ubmVjdGlvbkhvcHMgPSBbXTsKCiAgICBpZiAob2JqZWN0LnN0YXRlICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnN0YXRlICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2Uuc3RhdGUgPSBzdGF0ZUZyb21KU09OKG9iamVjdC5zdGF0ZSk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnN0YXRlID0gMDsKICAgIH0KCiAgICBpZiAob2JqZWN0Lm9yZGVyaW5nICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0Lm9yZGVyaW5nICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2Uub3JkZXJpbmcgPSBvcmRlckZyb21KU09OKG9iamVjdC5vcmRlcmluZyk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLm9yZGVyaW5nID0gMDsKICAgIH0KCiAgICBpZiAob2JqZWN0LmNvdW50ZXJwYXJ0eSAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5jb3VudGVycGFydHkgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5jb3VudGVycGFydHkgPSBDb3VudGVycGFydHkuZnJvbUpTT04ob2JqZWN0LmNvdW50ZXJwYXJ0eSk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLmNvdW50ZXJwYXJ0eSA9IHVuZGVmaW5lZDsKICAgIH0KCiAgICBpZiAob2JqZWN0LmNvbm5lY3Rpb25Ib3BzICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LmNvbm5lY3Rpb25Ib3BzICE9PSBudWxsKSB7CiAgICAgIHZhciBfaXRlcmF0b3I1ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIob2JqZWN0LmNvbm5lY3Rpb25Ib3BzKSwKICAgICAgICAgIF9zdGVwNTsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3I1LnMoKTsgIShfc3RlcDUgPSBfaXRlcmF0b3I1Lm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBlID0gX3N0ZXA1LnZhbHVlOwogICAgICAgICAgbWVzc2FnZS5jb25uZWN0aW9uSG9wcy5wdXNoKFN0cmluZyhlKSk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3I1LmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3I1LmYoKTsKICAgICAgfQogICAgfQoKICAgIGlmIChvYmplY3QudmVyc2lvbiAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC52ZXJzaW9uICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UudmVyc2lvbiA9IFN0cmluZyhvYmplY3QudmVyc2lvbik7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnZlcnNpb24gPSAiIjsKICAgIH0KCiAgICBpZiAob2JqZWN0LnBvcnRJZCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5wb3J0SWQgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5wb3J0SWQgPSBTdHJpbmcob2JqZWN0LnBvcnRJZCk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnBvcnRJZCA9ICIiOwogICAgfQoKICAgIGlmIChvYmplY3QuY2hhbm5lbElkICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LmNoYW5uZWxJZCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLmNoYW5uZWxJZCA9IFN0cmluZyhvYmplY3QuY2hhbm5lbElkKTsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2UuY2hhbm5lbElkID0gIiI7CiAgICB9CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfSwKICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTihtZXNzYWdlKSB7CiAgICB2YXIgb2JqID0ge307CiAgICBtZXNzYWdlLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgKG9iai5zdGF0ZSA9IHN0YXRlVG9KU09OKG1lc3NhZ2Uuc3RhdGUpKTsKICAgIG1lc3NhZ2Uub3JkZXJpbmcgIT09IHVuZGVmaW5lZCAmJiAob2JqLm9yZGVyaW5nID0gb3JkZXJUb0pTT04obWVzc2FnZS5vcmRlcmluZykpOwogICAgbWVzc2FnZS5jb3VudGVycGFydHkgIT09IHVuZGVmaW5lZCAmJiAob2JqLmNvdW50ZXJwYXJ0eSA9IG1lc3NhZ2UuY291bnRlcnBhcnR5ID8gQ291bnRlcnBhcnR5LnRvSlNPTihtZXNzYWdlLmNvdW50ZXJwYXJ0eSkgOiB1bmRlZmluZWQpOwoKICAgIGlmIChtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzKSB7CiAgICAgIG9iai5jb25uZWN0aW9uSG9wcyA9IG1lc3NhZ2UuY29ubmVjdGlvbkhvcHMubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGU7CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgb2JqLmNvbm5lY3Rpb25Ib3BzID0gW107CiAgICB9CgogICAgbWVzc2FnZS52ZXJzaW9uICE9PSB1bmRlZmluZWQgJiYgKG9iai52ZXJzaW9uID0gbWVzc2FnZS52ZXJzaW9uKTsKICAgIG1lc3NhZ2UucG9ydElkICE9PSB1bmRlZmluZWQgJiYgKG9iai5wb3J0SWQgPSBtZXNzYWdlLnBvcnRJZCk7CiAgICBtZXNzYWdlLmNoYW5uZWxJZCAhPT0gdW5kZWZpbmVkICYmIChvYmouY2hhbm5lbElkID0gbWVzc2FnZS5jaGFubmVsSWQpOwogICAgcmV0dXJuIG9iajsKICB9LAogIGZyb21QYXJ0aWFsOiBmdW5jdGlvbiBmcm9tUGFydGlhbChvYmplY3QpIHsKICAgIHZhciBtZXNzYWdlID0gX29iamVjdFNwcmVhZCh7fSwgYmFzZUlkZW50aWZpZWRDaGFubmVsKTsKCiAgICBtZXNzYWdlLmNvbm5lY3Rpb25Ib3BzID0gW107CgogICAgaWYgKG9iamVjdC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5zdGF0ZSAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnN0YXRlID0gb2JqZWN0LnN0YXRlOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5zdGF0ZSA9IDA7CiAgICB9CgogICAgaWYgKG9iamVjdC5vcmRlcmluZyAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5vcmRlcmluZyAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLm9yZGVyaW5nID0gb2JqZWN0Lm9yZGVyaW5nOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5vcmRlcmluZyA9IDA7CiAgICB9CgogICAgaWYgKG9iamVjdC5jb3VudGVycGFydHkgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QuY291bnRlcnBhcnR5ICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuY291bnRlcnBhcnR5ID0gQ291bnRlcnBhcnR5LmZyb21QYXJ0aWFsKG9iamVjdC5jb3VudGVycGFydHkpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5jb3VudGVycGFydHkgPSB1bmRlZmluZWQ7CiAgICB9CgogICAgaWYgKG9iamVjdC5jb25uZWN0aW9uSG9wcyAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5jb25uZWN0aW9uSG9wcyAhPT0gbnVsbCkgewogICAgICB2YXIgX2l0ZXJhdG9yNiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG9iamVjdC5jb25uZWN0aW9uSG9wcyksCiAgICAgICAgICBfc3RlcDY7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yNi5zKCk7ICEoX3N0ZXA2ID0gX2l0ZXJhdG9yNi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgZSA9IF9zdGVwNi52YWx1ZTsKICAgICAgICAgIG1lc3NhZ2UuY29ubmVjdGlvbkhvcHMucHVzaChlKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjYuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjYuZigpOwogICAgICB9CiAgICB9CgogICAgaWYgKG9iamVjdC52ZXJzaW9uICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnZlcnNpb24gIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS52ZXJzaW9uID0gb2JqZWN0LnZlcnNpb247CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnZlcnNpb24gPSAiIjsKICAgIH0KCiAgICBpZiAob2JqZWN0LnBvcnRJZCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5wb3J0SWQgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5wb3J0SWQgPSBvYmplY3QucG9ydElkOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5wb3J0SWQgPSAiIjsKICAgIH0KCiAgICBpZiAob2JqZWN0LmNoYW5uZWxJZCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5jaGFubmVsSWQgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5jaGFubmVsSWQgPSBvYmplY3QuY2hhbm5lbElkOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5jaGFubmVsSWQgPSAiIjsKICAgIH0KCiAgICByZXR1cm4gbWVzc2FnZTsKICB9Cn07CnZhciBiYXNlQ291bnRlcnBhcnR5ID0gewogIHBvcnRJZDogIiIsCiAgY2hhbm5lbElkOiAiIgp9OwpleHBvcnQgdmFyIENvdW50ZXJwYXJ0eSA9IHsKICBlbmNvZGU6IGZ1bmN0aW9uIGVuY29kZShtZXNzYWdlKSB7CiAgICB2YXIgd3JpdGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBXcml0ZXIuY3JlYXRlKCk7CgogICAgaWYgKG1lc3NhZ2UucG9ydElkICE9PSAiIikgewogICAgICB3cml0ZXIudWludDMyKDEwKS5zdHJpbmcobWVzc2FnZS5wb3J0SWQpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLmNoYW5uZWxJZCAhPT0gIiIpIHsKICAgICAgd3JpdGVyLnVpbnQzMigxOCkuc3RyaW5nKG1lc3NhZ2UuY2hhbm5lbElkKTsKICAgIH0KCiAgICByZXR1cm4gd3JpdGVyOwogIH0sCiAgZGVjb2RlOiBmdW5jdGlvbiBkZWNvZGUoaW5wdXQsIGxlbmd0aCkgewogICAgdmFyIHJlYWRlciA9IGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSA/IG5ldyBSZWFkZXIoaW5wdXQpIDogaW5wdXQ7CiAgICB2YXIgZW5kID0gbGVuZ3RoID09PSB1bmRlZmluZWQgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDsKCiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VDb3VudGVycGFydHkpOwoKICAgIHdoaWxlIChyZWFkZXIucG9zIDwgZW5kKSB7CiAgICAgIHZhciB0YWcgPSByZWFkZXIudWludDMyKCk7CgogICAgICBzd2l0Y2ggKHRhZyA+Pj4gMykgewogICAgICAgIGNhc2UgMToKICAgICAgICAgIG1lc3NhZ2UucG9ydElkID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMjoKICAgICAgICAgIG1lc3NhZ2UuY2hhbm5lbElkID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgZnJvbUpTT046IGZ1bmN0aW9uIGZyb21KU09OKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlQ291bnRlcnBhcnR5KTsKCiAgICBpZiAob2JqZWN0LnBvcnRJZCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5wb3J0SWQgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5wb3J0SWQgPSBTdHJpbmcob2JqZWN0LnBvcnRJZCk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnBvcnRJZCA9ICIiOwogICAgfQoKICAgIGlmIChvYmplY3QuY2hhbm5lbElkICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LmNoYW5uZWxJZCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLmNoYW5uZWxJZCA9IFN0cmluZyhvYmplY3QuY2hhbm5lbElkKTsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2UuY2hhbm5lbElkID0gIiI7CiAgICB9CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfSwKICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTihtZXNzYWdlKSB7CiAgICB2YXIgb2JqID0ge307CiAgICBtZXNzYWdlLnBvcnRJZCAhPT0gdW5kZWZpbmVkICYmIChvYmoucG9ydElkID0gbWVzc2FnZS5wb3J0SWQpOwogICAgbWVzc2FnZS5jaGFubmVsSWQgIT09IHVuZGVmaW5lZCAmJiAob2JqLmNoYW5uZWxJZCA9IG1lc3NhZ2UuY2hhbm5lbElkKTsKICAgIHJldHVybiBvYmo7CiAgfSwKICBmcm9tUGFydGlhbDogZnVuY3Rpb24gZnJvbVBhcnRpYWwob2JqZWN0KSB7CiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VDb3VudGVycGFydHkpOwoKICAgIGlmIChvYmplY3QucG9ydElkICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnBvcnRJZCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnBvcnRJZCA9IG9iamVjdC5wb3J0SWQ7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnBvcnRJZCA9ICIiOwogICAgfQoKICAgIGlmIChvYmplY3QuY2hhbm5lbElkICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LmNoYW5uZWxJZCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLmNoYW5uZWxJZCA9IG9iamVjdC5jaGFubmVsSWQ7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLmNoYW5uZWxJZCA9ICIiOwogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0KfTsKdmFyIGJhc2VQYWNrZXQgPSB7CiAgc2VxdWVuY2U6IDAsCiAgc291cmNlUG9ydDogIiIsCiAgc291cmNlQ2hhbm5lbDogIiIsCiAgZGVzdGluYXRpb25Qb3J0OiAiIiwKICBkZXN0aW5hdGlvbkNoYW5uZWw6ICIiLAogIHRpbWVvdXRUaW1lc3RhbXA6IDAKfTsKZXhwb3J0IHZhciBQYWNrZXQgPSB7CiAgZW5jb2RlOiBmdW5jdGlvbiBlbmNvZGUobWVzc2FnZSkgewogICAgdmFyIHdyaXRlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogV3JpdGVyLmNyZWF0ZSgpOwoKICAgIGlmIChtZXNzYWdlLnNlcXVlbmNlICE9PSAwKSB7CiAgICAgIHdyaXRlci51aW50MzIoOCkudWludDY0KG1lc3NhZ2Uuc2VxdWVuY2UpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLnNvdXJjZVBvcnQgIT09ICIiKSB7CiAgICAgIHdyaXRlci51aW50MzIoMTgpLnN0cmluZyhtZXNzYWdlLnNvdXJjZVBvcnQpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLnNvdXJjZUNoYW5uZWwgIT09ICIiKSB7CiAgICAgIHdyaXRlci51aW50MzIoMjYpLnN0cmluZyhtZXNzYWdlLnNvdXJjZUNoYW5uZWwpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLmRlc3RpbmF0aW9uUG9ydCAhPT0gIiIpIHsKICAgICAgd3JpdGVyLnVpbnQzMigzNCkuc3RyaW5nKG1lc3NhZ2UuZGVzdGluYXRpb25Qb3J0KTsKICAgIH0KCiAgICBpZiAobWVzc2FnZS5kZXN0aW5hdGlvbkNoYW5uZWwgIT09ICIiKSB7CiAgICAgIHdyaXRlci51aW50MzIoNDIpLnN0cmluZyhtZXNzYWdlLmRlc3RpbmF0aW9uQ2hhbm5lbCk7CiAgICB9CgogICAgaWYgKG1lc3NhZ2UuZGF0YS5sZW5ndGggIT09IDApIHsKICAgICAgd3JpdGVyLnVpbnQzMig1MCkuYnl0ZXMobWVzc2FnZS5kYXRhKTsKICAgIH0KCiAgICBpZiAobWVzc2FnZS50aW1lb3V0SGVpZ2h0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgSGVpZ2h0LmVuY29kZShtZXNzYWdlLnRpbWVvdXRIZWlnaHQsIHdyaXRlci51aW50MzIoNTgpLmZvcmsoKSkubGRlbGltKCk7CiAgICB9CgogICAgaWYgKG1lc3NhZ2UudGltZW91dFRpbWVzdGFtcCAhPT0gMCkgewogICAgICB3cml0ZXIudWludDMyKDY0KS51aW50NjQobWVzc2FnZS50aW1lb3V0VGltZXN0YW1wKTsKICAgIH0KCiAgICByZXR1cm4gd3JpdGVyOwogIH0sCiAgZGVjb2RlOiBmdW5jdGlvbiBkZWNvZGUoaW5wdXQsIGxlbmd0aCkgewogICAgdmFyIHJlYWRlciA9IGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSA/IG5ldyBSZWFkZXIoaW5wdXQpIDogaW5wdXQ7CiAgICB2YXIgZW5kID0gbGVuZ3RoID09PSB1bmRlZmluZWQgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDsKCiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VQYWNrZXQpOwoKICAgIHdoaWxlIChyZWFkZXIucG9zIDwgZW5kKSB7CiAgICAgIHZhciB0YWcgPSByZWFkZXIudWludDMyKCk7CgogICAgICBzd2l0Y2ggKHRhZyA+Pj4gMykgewogICAgICAgIGNhc2UgMToKICAgICAgICAgIG1lc3NhZ2Uuc2VxdWVuY2UgPSBsb25nVG9OdW1iZXIocmVhZGVyLnVpbnQ2NCgpKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDI6CiAgICAgICAgICBtZXNzYWdlLnNvdXJjZVBvcnQgPSByZWFkZXIuc3RyaW5nKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAzOgogICAgICAgICAgbWVzc2FnZS5zb3VyY2VDaGFubmVsID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNDoKICAgICAgICAgIG1lc3NhZ2UuZGVzdGluYXRpb25Qb3J0ID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNToKICAgICAgICAgIG1lc3NhZ2UuZGVzdGluYXRpb25DaGFubmVsID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNjoKICAgICAgICAgIG1lc3NhZ2UuZGF0YSA9IHJlYWRlci5ieXRlcygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNzoKICAgICAgICAgIG1lc3NhZ2UudGltZW91dEhlaWdodCA9IEhlaWdodC5kZWNvZGUocmVhZGVyLCByZWFkZXIudWludDMyKCkpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgODoKICAgICAgICAgIG1lc3NhZ2UudGltZW91dFRpbWVzdGFtcCA9IGxvbmdUb051bWJlcihyZWFkZXIudWludDY0KCkpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgZnJvbUpTT046IGZ1bmN0aW9uIGZyb21KU09OKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlUGFja2V0KTsKCiAgICBpZiAob2JqZWN0LnNlcXVlbmNlICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnNlcXVlbmNlICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2Uuc2VxdWVuY2UgPSBOdW1iZXIob2JqZWN0LnNlcXVlbmNlKTsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2Uuc2VxdWVuY2UgPSAwOwogICAgfQoKICAgIGlmIChvYmplY3Quc291cmNlUG9ydCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5zb3VyY2VQb3J0ICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2Uuc291cmNlUG9ydCA9IFN0cmluZyhvYmplY3Quc291cmNlUG9ydCk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnNvdXJjZVBvcnQgPSAiIjsKICAgIH0KCiAgICBpZiAob2JqZWN0LnNvdXJjZUNoYW5uZWwgIT09IHVuZGVmaW5lZCAmJiBvYmplY3Quc291cmNlQ2hhbm5lbCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnNvdXJjZUNoYW5uZWwgPSBTdHJpbmcob2JqZWN0LnNvdXJjZUNoYW5uZWwpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5zb3VyY2VDaGFubmVsID0gIiI7CiAgICB9CgogICAgaWYgKG9iamVjdC5kZXN0aW5hdGlvblBvcnQgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QuZGVzdGluYXRpb25Qb3J0ICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuZGVzdGluYXRpb25Qb3J0ID0gU3RyaW5nKG9iamVjdC5kZXN0aW5hdGlvblBvcnQpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5kZXN0aW5hdGlvblBvcnQgPSAiIjsKICAgIH0KCiAgICBpZiAob2JqZWN0LmRlc3RpbmF0aW9uQ2hhbm5lbCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5kZXN0aW5hdGlvbkNoYW5uZWwgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5kZXN0aW5hdGlvbkNoYW5uZWwgPSBTdHJpbmcob2JqZWN0LmRlc3RpbmF0aW9uQ2hhbm5lbCk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLmRlc3RpbmF0aW9uQ2hhbm5lbCA9ICIiOwogICAgfQoKICAgIGlmIChvYmplY3QuZGF0YSAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5kYXRhICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuZGF0YSA9IGJ5dGVzRnJvbUJhc2U2NChvYmplY3QuZGF0YSk7CiAgICB9CgogICAgaWYgKG9iamVjdC50aW1lb3V0SGVpZ2h0ICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnRpbWVvdXRIZWlnaHQgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS50aW1lb3V0SGVpZ2h0ID0gSGVpZ2h0LmZyb21KU09OKG9iamVjdC50aW1lb3V0SGVpZ2h0KTsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2UudGltZW91dEhlaWdodCA9IHVuZGVmaW5lZDsKICAgIH0KCiAgICBpZiAob2JqZWN0LnRpbWVvdXRUaW1lc3RhbXAgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QudGltZW91dFRpbWVzdGFtcCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnRpbWVvdXRUaW1lc3RhbXAgPSBOdW1iZXIob2JqZWN0LnRpbWVvdXRUaW1lc3RhbXApOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS50aW1lb3V0VGltZXN0YW1wID0gMDsKICAgIH0KCiAgICByZXR1cm4gbWVzc2FnZTsKICB9LAogIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKG1lc3NhZ2UpIHsKICAgIHZhciBvYmogPSB7fTsKICAgIG1lc3NhZ2Uuc2VxdWVuY2UgIT09IHVuZGVmaW5lZCAmJiAob2JqLnNlcXVlbmNlID0gbWVzc2FnZS5zZXF1ZW5jZSk7CiAgICBtZXNzYWdlLnNvdXJjZVBvcnQgIT09IHVuZGVmaW5lZCAmJiAob2JqLnNvdXJjZVBvcnQgPSBtZXNzYWdlLnNvdXJjZVBvcnQpOwogICAgbWVzc2FnZS5zb3VyY2VDaGFubmVsICE9PSB1bmRlZmluZWQgJiYgKG9iai5zb3VyY2VDaGFubmVsID0gbWVzc2FnZS5zb3VyY2VDaGFubmVsKTsKICAgIG1lc3NhZ2UuZGVzdGluYXRpb25Qb3J0ICE9PSB1bmRlZmluZWQgJiYgKG9iai5kZXN0aW5hdGlvblBvcnQgPSBtZXNzYWdlLmRlc3RpbmF0aW9uUG9ydCk7CiAgICBtZXNzYWdlLmRlc3RpbmF0aW9uQ2hhbm5lbCAhPT0gdW5kZWZpbmVkICYmIChvYmouZGVzdGluYXRpb25DaGFubmVsID0gbWVzc2FnZS5kZXN0aW5hdGlvbkNoYW5uZWwpOwogICAgbWVzc2FnZS5kYXRhICE9PSB1bmRlZmluZWQgJiYgKG9iai5kYXRhID0gYmFzZTY0RnJvbUJ5dGVzKG1lc3NhZ2UuZGF0YSAhPT0gdW5kZWZpbmVkID8gbWVzc2FnZS5kYXRhIDogbmV3IFVpbnQ4QXJyYXkoKSkpOwogICAgbWVzc2FnZS50aW1lb3V0SGVpZ2h0ICE9PSB1bmRlZmluZWQgJiYgKG9iai50aW1lb3V0SGVpZ2h0ID0gbWVzc2FnZS50aW1lb3V0SGVpZ2h0ID8gSGVpZ2h0LnRvSlNPTihtZXNzYWdlLnRpbWVvdXRIZWlnaHQpIDogdW5kZWZpbmVkKTsKICAgIG1lc3NhZ2UudGltZW91dFRpbWVzdGFtcCAhPT0gdW5kZWZpbmVkICYmIChvYmoudGltZW91dFRpbWVzdGFtcCA9IG1lc3NhZ2UudGltZW91dFRpbWVzdGFtcCk7CiAgICByZXR1cm4gb2JqOwogIH0sCiAgZnJvbVBhcnRpYWw6IGZ1bmN0aW9uIGZyb21QYXJ0aWFsKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlUGFja2V0KTsKCiAgICBpZiAob2JqZWN0LnNlcXVlbmNlICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnNlcXVlbmNlICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2Uuc2VxdWVuY2UgPSBvYmplY3Quc2VxdWVuY2U7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnNlcXVlbmNlID0gMDsKICAgIH0KCiAgICBpZiAob2JqZWN0LnNvdXJjZVBvcnQgIT09IHVuZGVmaW5lZCAmJiBvYmplY3Quc291cmNlUG9ydCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnNvdXJjZVBvcnQgPSBvYmplY3Quc291cmNlUG9ydDsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2Uuc291cmNlUG9ydCA9ICIiOwogICAgfQoKICAgIGlmIChvYmplY3Quc291cmNlQ2hhbm5lbCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5zb3VyY2VDaGFubmVsICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2Uuc291cmNlQ2hhbm5lbCA9IG9iamVjdC5zb3VyY2VDaGFubmVsOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5zb3VyY2VDaGFubmVsID0gIiI7CiAgICB9CgogICAgaWYgKG9iamVjdC5kZXN0aW5hdGlvblBvcnQgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QuZGVzdGluYXRpb25Qb3J0ICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuZGVzdGluYXRpb25Qb3J0ID0gb2JqZWN0LmRlc3RpbmF0aW9uUG9ydDsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2UuZGVzdGluYXRpb25Qb3J0ID0gIiI7CiAgICB9CgogICAgaWYgKG9iamVjdC5kZXN0aW5hdGlvbkNoYW5uZWwgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QuZGVzdGluYXRpb25DaGFubmVsICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuZGVzdGluYXRpb25DaGFubmVsID0gb2JqZWN0LmRlc3RpbmF0aW9uQ2hhbm5lbDsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2UuZGVzdGluYXRpb25DaGFubmVsID0gIiI7CiAgICB9CgogICAgaWYgKG9iamVjdC5kYXRhICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LmRhdGEgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5kYXRhID0gb2JqZWN0LmRhdGE7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLmRhdGEgPSBuZXcgVWludDhBcnJheSgpOwogICAgfQoKICAgIGlmIChvYmplY3QudGltZW91dEhlaWdodCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC50aW1lb3V0SGVpZ2h0ICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UudGltZW91dEhlaWdodCA9IEhlaWdodC5mcm9tUGFydGlhbChvYmplY3QudGltZW91dEhlaWdodCk7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnRpbWVvdXRIZWlnaHQgPSB1bmRlZmluZWQ7CiAgICB9CgogICAgaWYgKG9iamVjdC50aW1lb3V0VGltZXN0YW1wICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnRpbWVvdXRUaW1lc3RhbXAgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS50aW1lb3V0VGltZXN0YW1wID0gb2JqZWN0LnRpbWVvdXRUaW1lc3RhbXA7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnRpbWVvdXRUaW1lc3RhbXAgPSAwOwogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0KfTsKdmFyIGJhc2VQYWNrZXRTdGF0ZSA9IHsKICBwb3J0SWQ6ICIiLAogIGNoYW5uZWxJZDogIiIsCiAgc2VxdWVuY2U6IDAKfTsKZXhwb3J0IHZhciBQYWNrZXRTdGF0ZSA9IHsKICBlbmNvZGU6IGZ1bmN0aW9uIGVuY29kZShtZXNzYWdlKSB7CiAgICB2YXIgd3JpdGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBXcml0ZXIuY3JlYXRlKCk7CgogICAgaWYgKG1lc3NhZ2UucG9ydElkICE9PSAiIikgewogICAgICB3cml0ZXIudWludDMyKDEwKS5zdHJpbmcobWVzc2FnZS5wb3J0SWQpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLmNoYW5uZWxJZCAhPT0gIiIpIHsKICAgICAgd3JpdGVyLnVpbnQzMigxOCkuc3RyaW5nKG1lc3NhZ2UuY2hhbm5lbElkKTsKICAgIH0KCiAgICBpZiAobWVzc2FnZS5zZXF1ZW5jZSAhPT0gMCkgewogICAgICB3cml0ZXIudWludDMyKDI0KS51aW50NjQobWVzc2FnZS5zZXF1ZW5jZSk7CiAgICB9CgogICAgaWYgKG1lc3NhZ2UuZGF0YS5sZW5ndGggIT09IDApIHsKICAgICAgd3JpdGVyLnVpbnQzMigzNCkuYnl0ZXMobWVzc2FnZS5kYXRhKTsKICAgIH0KCiAgICByZXR1cm4gd3JpdGVyOwogIH0sCiAgZGVjb2RlOiBmdW5jdGlvbiBkZWNvZGUoaW5wdXQsIGxlbmd0aCkgewogICAgdmFyIHJlYWRlciA9IGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSA/IG5ldyBSZWFkZXIoaW5wdXQpIDogaW5wdXQ7CiAgICB2YXIgZW5kID0gbGVuZ3RoID09PSB1bmRlZmluZWQgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDsKCiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VQYWNrZXRTdGF0ZSk7CgogICAgd2hpbGUgKHJlYWRlci5wb3MgPCBlbmQpIHsKICAgICAgdmFyIHRhZyA9IHJlYWRlci51aW50MzIoKTsKCiAgICAgIHN3aXRjaCAodGFnID4+PiAzKSB7CiAgICAgICAgY2FzZSAxOgogICAgICAgICAgbWVzc2FnZS5wb3J0SWQgPSByZWFkZXIuc3RyaW5nKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAyOgogICAgICAgICAgbWVzc2FnZS5jaGFubmVsSWQgPSByZWFkZXIuc3RyaW5nKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAzOgogICAgICAgICAgbWVzc2FnZS5zZXF1ZW5jZSA9IGxvbmdUb051bWJlcihyZWFkZXIudWludDY0KCkpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNDoKICAgICAgICAgIG1lc3NhZ2UuZGF0YSA9IHJlYWRlci5ieXRlcygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgZnJvbUpTT046IGZ1bmN0aW9uIGZyb21KU09OKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlUGFja2V0U3RhdGUpOwoKICAgIGlmIChvYmplY3QucG9ydElkICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnBvcnRJZCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnBvcnRJZCA9IFN0cmluZyhvYmplY3QucG9ydElkKTsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2UucG9ydElkID0gIiI7CiAgICB9CgogICAgaWYgKG9iamVjdC5jaGFubmVsSWQgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QuY2hhbm5lbElkICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuY2hhbm5lbElkID0gU3RyaW5nKG9iamVjdC5jaGFubmVsSWQpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5jaGFubmVsSWQgPSAiIjsKICAgIH0KCiAgICBpZiAob2JqZWN0LnNlcXVlbmNlICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnNlcXVlbmNlICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2Uuc2VxdWVuY2UgPSBOdW1iZXIob2JqZWN0LnNlcXVlbmNlKTsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2Uuc2VxdWVuY2UgPSAwOwogICAgfQoKICAgIGlmIChvYmplY3QuZGF0YSAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5kYXRhICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuZGF0YSA9IGJ5dGVzRnJvbUJhc2U2NChvYmplY3QuZGF0YSk7CiAgICB9CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfSwKICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTihtZXNzYWdlKSB7CiAgICB2YXIgb2JqID0ge307CiAgICBtZXNzYWdlLnBvcnRJZCAhPT0gdW5kZWZpbmVkICYmIChvYmoucG9ydElkID0gbWVzc2FnZS5wb3J0SWQpOwogICAgbWVzc2FnZS5jaGFubmVsSWQgIT09IHVuZGVmaW5lZCAmJiAob2JqLmNoYW5uZWxJZCA9IG1lc3NhZ2UuY2hhbm5lbElkKTsKICAgIG1lc3NhZ2Uuc2VxdWVuY2UgIT09IHVuZGVmaW5lZCAmJiAob2JqLnNlcXVlbmNlID0gbWVzc2FnZS5zZXF1ZW5jZSk7CiAgICBtZXNzYWdlLmRhdGEgIT09IHVuZGVmaW5lZCAmJiAob2JqLmRhdGEgPSBiYXNlNjRGcm9tQnl0ZXMobWVzc2FnZS5kYXRhICE9PSB1bmRlZmluZWQgPyBtZXNzYWdlLmRhdGEgOiBuZXcgVWludDhBcnJheSgpKSk7CiAgICByZXR1cm4gb2JqOwogIH0sCiAgZnJvbVBhcnRpYWw6IGZ1bmN0aW9uIGZyb21QYXJ0aWFsKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlUGFja2V0U3RhdGUpOwoKICAgIGlmIChvYmplY3QucG9ydElkICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnBvcnRJZCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnBvcnRJZCA9IG9iamVjdC5wb3J0SWQ7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnBvcnRJZCA9ICIiOwogICAgfQoKICAgIGlmIChvYmplY3QuY2hhbm5lbElkICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LmNoYW5uZWxJZCAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLmNoYW5uZWxJZCA9IG9iamVjdC5jaGFubmVsSWQ7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLmNoYW5uZWxJZCA9ICIiOwogICAgfQoKICAgIGlmIChvYmplY3Quc2VxdWVuY2UgIT09IHVuZGVmaW5lZCAmJiBvYmplY3Quc2VxdWVuY2UgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5zZXF1ZW5jZSA9IG9iamVjdC5zZXF1ZW5jZTsKICAgIH0gZWxzZSB7CiAgICAgIG1lc3NhZ2Uuc2VxdWVuY2UgPSAwOwogICAgfQoKICAgIGlmIChvYmplY3QuZGF0YSAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5kYXRhICE9PSBudWxsKSB7CiAgICAgIG1lc3NhZ2UuZGF0YSA9IG9iamVjdC5kYXRhOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5kYXRhID0gbmV3IFVpbnQ4QXJyYXkoKTsKICAgIH0KCiAgICByZXR1cm4gbWVzc2FnZTsKICB9Cn07CnZhciBiYXNlQWNrbm93bGVkZ2VtZW50ID0ge307CmV4cG9ydCB2YXIgQWNrbm93bGVkZ2VtZW50ID0gewogIGVuY29kZTogZnVuY3Rpb24gZW5jb2RlKG1lc3NhZ2UpIHsKICAgIHZhciB3cml0ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFdyaXRlci5jcmVhdGUoKTsKCiAgICBpZiAobWVzc2FnZS5yZXN1bHQgIT09IHVuZGVmaW5lZCkgewogICAgICB3cml0ZXIudWludDMyKDE3MCkuYnl0ZXMobWVzc2FnZS5yZXN1bHQpOwogICAgfQoKICAgIGlmIChtZXNzYWdlLmVycm9yICE9PSB1bmRlZmluZWQpIHsKICAgICAgd3JpdGVyLnVpbnQzMigxNzgpLnN0cmluZyhtZXNzYWdlLmVycm9yKTsKICAgIH0KCiAgICByZXR1cm4gd3JpdGVyOwogIH0sCiAgZGVjb2RlOiBmdW5jdGlvbiBkZWNvZGUoaW5wdXQsIGxlbmd0aCkgewogICAgdmFyIHJlYWRlciA9IGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSA/IG5ldyBSZWFkZXIoaW5wdXQpIDogaW5wdXQ7CiAgICB2YXIgZW5kID0gbGVuZ3RoID09PSB1bmRlZmluZWQgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDsKCiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VBY2tub3dsZWRnZW1lbnQpOwoKICAgIHdoaWxlIChyZWFkZXIucG9zIDwgZW5kKSB7CiAgICAgIHZhciB0YWcgPSByZWFkZXIudWludDMyKCk7CgogICAgICBzd2l0Y2ggKHRhZyA+Pj4gMykgewogICAgICAgIGNhc2UgMjE6CiAgICAgICAgICBtZXNzYWdlLnJlc3VsdCA9IHJlYWRlci5ieXRlcygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMjI6CiAgICAgICAgICBtZXNzYWdlLmVycm9yID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgZnJvbUpTT046IGZ1bmN0aW9uIGZyb21KU09OKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlQWNrbm93bGVkZ2VtZW50KTsKCiAgICBpZiAob2JqZWN0LnJlc3VsdCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5yZXN1bHQgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5yZXN1bHQgPSBieXRlc0Zyb21CYXNlNjQob2JqZWN0LnJlc3VsdCk7CiAgICB9CgogICAgaWYgKG9iamVjdC5lcnJvciAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5lcnJvciAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLmVycm9yID0gU3RyaW5nKG9iamVjdC5lcnJvcik7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLmVycm9yID0gdW5kZWZpbmVkOwogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgdG9KU09OOiBmdW5jdGlvbiB0b0pTT04obWVzc2FnZSkgewogICAgdmFyIG9iaiA9IHt9OwogICAgbWVzc2FnZS5yZXN1bHQgIT09IHVuZGVmaW5lZCAmJiAob2JqLnJlc3VsdCA9IG1lc3NhZ2UucmVzdWx0ICE9PSB1bmRlZmluZWQgPyBiYXNlNjRGcm9tQnl0ZXMobWVzc2FnZS5yZXN1bHQpIDogdW5kZWZpbmVkKTsKICAgIG1lc3NhZ2UuZXJyb3IgIT09IHVuZGVmaW5lZCAmJiAob2JqLmVycm9yID0gbWVzc2FnZS5lcnJvcik7CiAgICByZXR1cm4gb2JqOwogIH0sCiAgZnJvbVBhcnRpYWw6IGZ1bmN0aW9uIGZyb21QYXJ0aWFsKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlQWNrbm93bGVkZ2VtZW50KTsKCiAgICBpZiAob2JqZWN0LnJlc3VsdCAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5yZXN1bHQgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS5yZXN1bHQgPSBvYmplY3QucmVzdWx0OwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5yZXN1bHQgPSB1bmRlZmluZWQ7CiAgICB9CgogICAgaWYgKG9iamVjdC5lcnJvciAhPT0gdW5kZWZpbmVkICYmIG9iamVjdC5lcnJvciAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLmVycm9yID0gb2JqZWN0LmVycm9yOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS5lcnJvciA9IHVuZGVmaW5lZDsKICAgIH0KCiAgICByZXR1cm4gbWVzc2FnZTsKICB9Cn07Cgp2YXIgZ2xvYmFsVGhpcyA9IGZ1bmN0aW9uICgpIHsKICBpZiAodHlwZW9mIGdsb2JhbFRoaXMgIT09ICJ1bmRlZmluZWQiKSByZXR1cm4gZ2xvYmFsVGhpczsKICBpZiAodHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiKSByZXR1cm4gc2VsZjsKICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIpIHJldHVybiB3aW5kb3c7CiAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiKSByZXR1cm4gZ2xvYmFsOwogIHRocm93ICJVbmFibGUgdG8gbG9jYXRlIGdsb2JhbCBvYmplY3QiOwp9KCk7Cgp2YXIgYXRvYiA9IGdsb2JhbFRoaXMuYXRvYiB8fCBmdW5jdGlvbiAoYjY0KSB7CiAgcmV0dXJuIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oYjY0LCAiYmFzZTY0IikudG9TdHJpbmcoImJpbmFyeSIpOwp9OwoKZnVuY3Rpb24gYnl0ZXNGcm9tQmFzZTY0KGI2NCkgewogIHZhciBiaW4gPSBhdG9iKGI2NCk7CiAgdmFyIGFyciA9IG5ldyBVaW50OEFycmF5KGJpbi5sZW5ndGgpOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IGJpbi5sZW5ndGg7ICsraSkgewogICAgYXJyW2ldID0gYmluLmNoYXJDb2RlQXQoaSk7CiAgfQoKICByZXR1cm4gYXJyOwp9Cgp2YXIgYnRvYSA9IGdsb2JhbFRoaXMuYnRvYSB8fCBmdW5jdGlvbiAoYmluKSB7CiAgcmV0dXJuIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oYmluLCAiYmluYXJ5IikudG9TdHJpbmcoImJhc2U2NCIpOwp9OwoKZnVuY3Rpb24gYmFzZTY0RnJvbUJ5dGVzKGFycikgewogIHZhciBiaW4gPSBbXTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIuYnl0ZUxlbmd0aDsgKytpKSB7CiAgICBiaW4ucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGFycltpXSkpOwogIH0KCiAgcmV0dXJuIGJ0b2EoYmluLmpvaW4oIiIpKTsKfQoKZnVuY3Rpb24gbG9uZ1RvTnVtYmVyKF9sb25nKSB7CiAgaWYgKF9sb25nLmd0KE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKSkgewogICAgdGhyb3cgbmV3IGdsb2JhbFRoaXMuRXJyb3IoIlZhbHVlIGlzIGxhcmdlciB0aGFuIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSIik7CiAgfQoKICByZXR1cm4gX2xvbmcudG9OdW1iZXIoKTsKfQoKaWYgKHV0aWwuTG9uZyAhPT0gTG9uZykgewogIHV0aWwuTG9uZyA9IExvbmc7CiAgY29uZmlndXJlKCk7Cn0="},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js"],"names":["Long","util","configure","Writer","Reader","Height","protobufPackage","State","stateFromJSON","object","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","Order","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","version","Channel","encode","message","writer","create","uint32","int32","counterparty","undefined","Counterparty","fork","ldelim","v","string","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","skipType","fromJSON","e","String","toJSON","obj","map","fromPartial","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","uint64","data","bytes","timeoutHeight","longToNumber","Number","bytesFromBase64","base64FromBytes","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","result","error","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}