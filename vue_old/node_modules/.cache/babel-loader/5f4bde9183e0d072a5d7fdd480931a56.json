{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","mtime":1620801165475},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS91YnVudHUvc3RhcnBvcnQtZ3Jhdml0eS92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS91YnVudHUvc3RhcnBvcnQtZ3Jhdml0eS92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvdWJ1bnR1L3N0YXJwb3J0LWdyYXZpdHkvdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LWJ1ZmZlci5zbGljZS5qcyI7CgovKiBlc2xpbnQtZGlzYWJsZSAqLwppbXBvcnQgeyBSZWFkZXIsIFdyaXRlciB9IGZyb20gInByb3RvYnVmanMvbWluaW1hbCI7CmV4cG9ydCB2YXIgcHJvdG9idWZQYWNrYWdlID0gImNvc21vcy5zbGFzaGluZy52MWJldGExIjsKdmFyIGJhc2VNc2dVbmphaWwgPSB7CiAgdmFsaWRhdG9yQWRkcjogIiIKfTsKZXhwb3J0IHZhciBNc2dVbmphaWwgPSB7CiAgZW5jb2RlOiBmdW5jdGlvbiBlbmNvZGUobWVzc2FnZSkgewogICAgdmFyIHdyaXRlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogV3JpdGVyLmNyZWF0ZSgpOwoKICAgIGlmIChtZXNzYWdlLnZhbGlkYXRvckFkZHIgIT09ICIiKSB7CiAgICAgIHdyaXRlci51aW50MzIoMTApLnN0cmluZyhtZXNzYWdlLnZhbGlkYXRvckFkZHIpOwogICAgfQoKICAgIHJldHVybiB3cml0ZXI7CiAgfSwKICBkZWNvZGU6IGZ1bmN0aW9uIGRlY29kZShpbnB1dCwgbGVuZ3RoKSB7CiAgICB2YXIgcmVhZGVyID0gaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5ID8gbmV3IFJlYWRlcihpbnB1dCkgOiBpbnB1dDsKICAgIHZhciBlbmQgPSBsZW5ndGggPT09IHVuZGVmaW5lZCA/IHJlYWRlci5sZW4gOiByZWFkZXIucG9zICsgbGVuZ3RoOwoKICAgIHZhciBtZXNzYWdlID0gX29iamVjdFNwcmVhZCh7fSwgYmFzZU1zZ1VuamFpbCk7CgogICAgd2hpbGUgKHJlYWRlci5wb3MgPCBlbmQpIHsKICAgICAgdmFyIHRhZyA9IHJlYWRlci51aW50MzIoKTsKCiAgICAgIHN3aXRjaCAodGFnID4+PiAzKSB7CiAgICAgICAgY2FzZSAxOgogICAgICAgICAgbWVzc2FnZS52YWxpZGF0b3JBZGRyID0gcmVhZGVyLnN0cmluZygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgZnJvbUpTT046IGZ1bmN0aW9uIGZyb21KU09OKG9iamVjdCkgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlTXNnVW5qYWlsKTsKCiAgICBpZiAob2JqZWN0LnZhbGlkYXRvckFkZHIgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QudmFsaWRhdG9yQWRkciAhPT0gbnVsbCkgewogICAgICBtZXNzYWdlLnZhbGlkYXRvckFkZHIgPSBTdHJpbmcob2JqZWN0LnZhbGlkYXRvckFkZHIpOwogICAgfSBlbHNlIHsKICAgICAgbWVzc2FnZS52YWxpZGF0b3JBZGRyID0gIiI7CiAgICB9CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfSwKICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTihtZXNzYWdlKSB7CiAgICB2YXIgb2JqID0ge307CiAgICBtZXNzYWdlLnZhbGlkYXRvckFkZHIgIT09IHVuZGVmaW5lZCAmJiAob2JqLnZhbGlkYXRvckFkZHIgPSBtZXNzYWdlLnZhbGlkYXRvckFkZHIpOwogICAgcmV0dXJuIG9iajsKICB9LAogIGZyb21QYXJ0aWFsOiBmdW5jdGlvbiBmcm9tUGFydGlhbChvYmplY3QpIHsKICAgIHZhciBtZXNzYWdlID0gX29iamVjdFNwcmVhZCh7fSwgYmFzZU1zZ1VuamFpbCk7CgogICAgaWYgKG9iamVjdC52YWxpZGF0b3JBZGRyICE9PSB1bmRlZmluZWQgJiYgb2JqZWN0LnZhbGlkYXRvckFkZHIgIT09IG51bGwpIHsKICAgICAgbWVzc2FnZS52YWxpZGF0b3JBZGRyID0gb2JqZWN0LnZhbGlkYXRvckFkZHI7CiAgICB9IGVsc2UgewogICAgICBtZXNzYWdlLnZhbGlkYXRvckFkZHIgPSAiIjsKICAgIH0KCiAgICByZXR1cm4gbWVzc2FnZTsKICB9Cn07CnZhciBiYXNlTXNnVW5qYWlsUmVzcG9uc2UgPSB7fTsKZXhwb3J0IHZhciBNc2dVbmphaWxSZXNwb25zZSA9IHsKICBlbmNvZGU6IGZ1bmN0aW9uIGVuY29kZShfKSB7CiAgICB2YXIgd3JpdGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBXcml0ZXIuY3JlYXRlKCk7CiAgICByZXR1cm4gd3JpdGVyOwogIH0sCiAgZGVjb2RlOiBmdW5jdGlvbiBkZWNvZGUoaW5wdXQsIGxlbmd0aCkgewogICAgdmFyIHJlYWRlciA9IGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSA/IG5ldyBSZWFkZXIoaW5wdXQpIDogaW5wdXQ7CiAgICB2YXIgZW5kID0gbGVuZ3RoID09PSB1bmRlZmluZWQgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDsKCiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VNc2dVbmphaWxSZXNwb25zZSk7CgogICAgd2hpbGUgKHJlYWRlci5wb3MgPCBlbmQpIHsKICAgICAgdmFyIHRhZyA9IHJlYWRlci51aW50MzIoKTsKCiAgICAgIHN3aXRjaCAodGFnID4+PiAzKSB7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJlYWRlci5za2lwVHlwZSh0YWcgJiA3KTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfSwKICBmcm9tSlNPTjogZnVuY3Rpb24gZnJvbUpTT04oXykgewogICAgdmFyIG1lc3NhZ2UgPSBfb2JqZWN0U3ByZWFkKHt9LCBiYXNlTXNnVW5qYWlsUmVzcG9uc2UpOwoKICAgIHJldHVybiBtZXNzYWdlOwogIH0sCiAgdG9KU09OOiBmdW5jdGlvbiB0b0pTT04oXykgewogICAgdmFyIG9iaiA9IHt9OwogICAgcmV0dXJuIG9iajsKICB9LAogIGZyb21QYXJ0aWFsOiBmdW5jdGlvbiBmcm9tUGFydGlhbChfKSB7CiAgICB2YXIgbWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIGJhc2VNc2dVbmphaWxSZXNwb25zZSk7CgogICAgcmV0dXJuIG1lc3NhZ2U7CiAgfQp9OwpleHBvcnQgdmFyIE1zZ0NsaWVudEltcGwgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIE1zZ0NsaWVudEltcGwocnBjKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTXNnQ2xpZW50SW1wbCk7CgogICAgdGhpcy5ycGMgPSBycGM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTXNnQ2xpZW50SW1wbCwgW3sKICAgIGtleTogIlVuamFpbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gVW5qYWlsKHJlcXVlc3QpIHsKICAgICAgdmFyIGRhdGEgPSBNc2dVbmphaWwuZW5jb2RlKHJlcXVlc3QpLmZpbmlzaCgpOwogICAgICB2YXIgcHJvbWlzZSA9IHRoaXMucnBjLnJlcXVlc3QoImNvc21vcy5zbGFzaGluZy52MWJldGExLk1zZyIsICJVbmphaWwiLCBkYXRhKTsKICAgICAgcmV0dXJuIHByb21pc2UudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBNc2dVbmphaWxSZXNwb25zZS5kZWNvZGUobmV3IFJlYWRlcihkYXRhKSk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE1zZ0NsaWVudEltcGw7Cn0oKTs="},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js"],"names":["Reader","Writer","protobufPackage","baseMsgUnjail","validatorAddr","MsgUnjail","encode","message","writer","create","uint32","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgUnjailResponse","MsgUnjailResponse","_","MsgClientImpl","rpc","request","data","finish","promise","then"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n"]}]}