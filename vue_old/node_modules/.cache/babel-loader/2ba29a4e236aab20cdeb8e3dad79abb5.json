{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","mtime":1620801165451},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3VidW50dS9zdGFycG9ydC1ncmF2aXR5L3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8gVEhJUyBGSUxFIElTIEdFTkVSQVRFRCBBVVRPTUFUSUNBTExZLiBETyBOT1QgTU9ESUZZLgppbXBvcnQgeyBTaWduaW5nU3RhcmdhdGVDbGllbnQgfSBmcm9tICJAY29zbWpzL3N0YXJnYXRlIjsKaW1wb3J0IHsgUmVnaXN0cnkgfSBmcm9tICJAY29zbWpzL3Byb3RvLXNpZ25pbmciOwppbXBvcnQgeyBBcGkgfSBmcm9tICIuL3Jlc3QiOwppbXBvcnQgeyBNc2dNdWx0aVNlbmQgfSBmcm9tICIuL3R5cGVzL2Nvc21vcy9iYW5rL3YxYmV0YTEvdHgiOwppbXBvcnQgeyBNc2dTZW5kIH0gZnJvbSAiLi90eXBlcy9jb3Ntb3MvYmFuay92MWJldGExL3R4IjsKdmFyIHR5cGVzID0gW1siL2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnTXVsdGlTZW5kIiwgTXNnTXVsdGlTZW5kXSwgWyIvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kIiwgTXNnU2VuZF1dOwp2YXIgcmVnaXN0cnkgPSBuZXcgUmVnaXN0cnkodHlwZXMpOwp2YXIgZGVmYXVsdEZlZSA9IHsKICBhbW91bnQ6IFtdLAogIGdhczogIjIwMDAwMCIKfTsKCnZhciB0eENsaWVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUod2FsbGV0KSB7CiAgICB2YXIgX3JlZjIsCiAgICAgICAgYWRkciwKICAgICAgICBjbGllbnQsCiAgICAgICAgYWRkcmVzcywKICAgICAgICBfYXJncyA9IGFyZ3VtZW50czsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9yZWYyID0gX2FyZ3MubGVuZ3RoID4gMSAmJiBfYXJnc1sxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3NbMV0gOiB7CiAgICAgICAgICAgICAgYWRkcjogImh0dHA6Ly9sb2NhbGhvc3Q6MjY2NTciCiAgICAgICAgICAgIH0sIGFkZHIgPSBfcmVmMi5hZGRyOwoKICAgICAgICAgICAgaWYgKHdhbGxldCkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIndhbGxldCBpcyByZXF1aXJlZCIpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBTaWduaW5nU3RhcmdhdGVDbGllbnQuY29ubmVjdFdpdGhTaWduZXIoYWRkciwgd2FsbGV0LCB7CiAgICAgICAgICAgICAgcmVnaXN0cnk6IHJlZ2lzdHJ5CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2xpZW50ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgIHJldHVybiB3YWxsZXQuZ2V0QWNjb3VudHMoKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGFkZHJlc3MgPSBfY29udGV4dC5zZW50WzBdLmFkZHJlc3M7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICBzaWduQW5kQnJvYWRjYXN0OiBmdW5jdGlvbiBzaWduQW5kQnJvYWRjYXN0KG1zZ3MsIF9yZWYzKSB7CiAgICAgICAgICAgICAgICB2YXIgX3JlZjMkZmVlID0gX3JlZjMuZmVlLAogICAgICAgICAgICAgICAgICAgIGZlZSA9IF9yZWYzJGZlZSA9PT0gdm9pZCAwID8gZGVmYXVsdEZlZSA6IF9yZWYzJGZlZSwKICAgICAgICAgICAgICAgICAgICBfcmVmMyRtZW1vID0gX3JlZjMubWVtbywKICAgICAgICAgICAgICAgICAgICBtZW1vID0gX3JlZjMkbWVtbyA9PT0gdm9pZCAwID8gbnVsbCA6IF9yZWYzJG1lbW87CiAgICAgICAgICAgICAgICByZXR1cm4gbWVtbyA/IGNsaWVudC5zaWduQW5kQnJvYWRjYXN0KGFkZHJlc3MsIG1zZ3MsIGZlZSwgbWVtbykgOiBjbGllbnQuc2lnbkFuZEJyb2FkY2FzdChhZGRyZXNzLCBtc2dzLCBmZWUpOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbXNnTXVsdGlTZW5kOiBmdW5jdGlvbiBtc2dNdWx0aVNlbmQoZGF0YSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgdHlwZVVybDogIi9jb3Ntb3MuYmFuay52MWJldGExLk1zZ011bHRpU2VuZCIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBkYXRhCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbXNnU2VuZDogZnVuY3Rpb24gbXNnU2VuZChkYXRhKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICB0eXBlVXJsOiAiL2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZCIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBkYXRhCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiB0eENsaWVudChfeCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgp2YXIgcXVlcnlDbGllbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICB2YXIgX3JlZjUsCiAgICAgICAgYWRkciwKICAgICAgICBfYXJnczIgPSBhcmd1bWVudHM7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX3JlZjUgPSBfYXJnczIubGVuZ3RoID4gMCAmJiBfYXJnczJbMF0gIT09IHVuZGVmaW5lZCA/IF9hcmdzMlswXSA6IHsKICAgICAgICAgICAgICBhZGRyOiAiaHR0cDovL2xvY2FsaG9zdDoxMzE3IgogICAgICAgICAgICB9LCBhZGRyID0gX3JlZjUuYWRkcjsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIG5ldyBBcGkoewogICAgICAgICAgICAgIGJhc2VVcmw6IGFkZHIKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHF1ZXJ5Q2xpZW50KCkgewogICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKZXhwb3J0IHsgdHhDbGllbnQsIHF1ZXJ5Q2xpZW50IH07"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js"],"names":["SigningStargateClient","Registry","Api","MsgMultiSend","MsgSend","types","registry","defaultFee","amount","gas","txClient","wallet","addr","Error","connectWithSigner","client","getAccounts","address","signAndBroadcast","msgs","fee","memo","msgMultiSend","data","typeUrl","value","msgSend","queryClient","baseUrl"],"mappings":";;AAAA;AACA,SAASA,qBAAT,QAAsC,kBAAtC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,IAAMC,KAAK,GAAG,CACV,CAAC,mCAAD,EAAsCF,YAAtC,CADU,EAEV,CAAC,8BAAD,EAAiCC,OAAjC,CAFU,CAAd;AAIA,IAAME,QAAQ,GAAG,IAAIL,QAAJ,CAAaI,KAAb,CAAjB;AACA,IAAME,UAAU,GAAG;AACfC,EAAAA,MAAM,EAAE,EADO;AAEfC,EAAAA,GAAG,EAAE;AAFU,CAAnB;;AAIA,IAAMC,QAAQ;AAAA,qEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4EAAgC;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAhC,EAAuBA,IAAvB,SAAiBA,IAAjB;;AAAA,gBACRD,MADQ;AAAA;AAAA;AAAA;;AAAA,kBAEH,IAAIE,KAAJ,CAAU,oBAAV,CAFG;;AAAA;AAAA;AAAA,mBAGQb,qBAAqB,CAACc,iBAAtB,CAAwCF,IAAxC,EAA8CD,MAA9C,EAAsD;AAAEL,cAAAA,QAAQ,EAARA;AAAF,aAAtD,CAHR;;AAAA;AAGPS,YAAAA,MAHO;AAAA;AAAA,mBAIcJ,MAAM,CAACK,WAAP,EAJd;;AAAA;AAILC,YAAAA,OAJK,iBAIoC,CAJpC,EAILA,OAJK;AAAA,6CAKN;AACHC,cAAAA,gBAAgB,EAAE,0BAACC,IAAD;AAAA,sCAASC,GAAT;AAAA,oBAASA,GAAT,0BAAeb,UAAf;AAAA,uCAA2Bc,IAA3B;AAAA,oBAA2BA,IAA3B,2BAAkC,IAAlC;AAAA,uBAA6CA,IAAI,GAAGN,MAAM,CAACG,gBAAP,CAAwBD,OAAxB,EAAiCE,IAAjC,EAAuCC,GAAvC,EAA4CC,IAA5C,CAAH,GAAuDN,MAAM,CAACG,gBAAP,CAAwBD,OAAxB,EAAiCE,IAAjC,EAAuCC,GAAvC,CAAxG;AAAA,eADf;AAEHE,cAAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,uBAAW;AAAEC,kBAAAA,OAAO,EAAE,mCAAX;AAAgDC,kBAAAA,KAAK,EAAEF;AAAvD,iBAAX;AAAA,eAFX;AAGHG,cAAAA,OAAO,EAAE,iBAACH,IAAD;AAAA,uBAAW;AAAEC,kBAAAA,OAAO,EAAE,8BAAX;AAA2CC,kBAAAA,KAAK,EAAEF;AAAlD,iBAAX;AAAA;AAHN,aALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARb,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAWA,IAAMiB,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+EAAwB;AAAEf,cAAAA,IAAI,EAAE;AAAR,aAAxB,EAAeA,IAAf,SAASA,IAAT;AAAA,8CACT,IAAIV,GAAJ,CAAQ;AAAE0B,cAAAA,OAAO,EAAEhB;AAAX,aAAR,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXe,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAGA,SAASjB,QAAT,EAAmBiB,WAAnB","sourcesContent":["// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n"]}]}