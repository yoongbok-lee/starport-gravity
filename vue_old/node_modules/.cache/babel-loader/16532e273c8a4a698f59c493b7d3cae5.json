{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","mtime":1620801165499},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js"],"names":["CommitmentProof","Writer","Reader","protobufPackage","baseMerkleRoot","MerkleRoot","encode","message","writer","create","hash","length","uint32","bytes","decode","input","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","baseMerklePrefix","MerklePrefix","keyPrefix","baseMerklePath","keyPath","MerklePath","v","string","push","e","String","map","baseMerkleProof","MerkleProof","proofs","fork","ldelim","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","fromCharCode","join"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"]}]}