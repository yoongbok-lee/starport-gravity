{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","mtime":1620801165459},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js"],"names":["Long","util","configure","Writer","Reader","Duration","protobufPackage","baseConsensusParams","ConsensusParams","encode","message","writer","create","block","undefined","BlockParams","uint32","fork","ldelim","evidence","EvidenceParams","validator","ValidatorParams","version","VersionParams","decode","input","length","reader","Uint8Array","end","len","pos","tag","skipType","fromJSON","object","toJSON","obj","fromPartial","baseBlockParams","maxBytes","maxGas","timeIotaMs","int64","longToNumber","Number","baseEvidenceParams","maxAgeNumBlocks","maxAgeDuration","baseValidatorParams","pubKeyTypes","v","string","push","e","String","map","baseVersionParams","appVersion","uint64","baseHashedParams","blockMaxBytes","blockMaxGas","HashedParams","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}