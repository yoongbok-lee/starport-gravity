{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","mtime":1620801165475},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js"],"names":["Long","util","configure","Writer","Reader","Params","ValidatorSigningInfo","protobufPackage","baseGenesisState","GenesisState","encode","message","writer","create","params","undefined","uint32","fork","ldelim","signingInfos","v","SigningInfo","missedBlocks","ValidatorMissedBlocks","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","skipType","fromJSON","object","e","toJSON","obj","map","fromPartial","baseSigningInfo","address","string","validatorSigningInfo","String","baseValidatorMissedBlocks","MissedBlock","baseMissedBlock","index","missed","int64","bool","longToNumber","Number","Boolean","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}