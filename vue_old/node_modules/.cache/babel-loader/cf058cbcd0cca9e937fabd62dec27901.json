{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","mtime":1620801165479},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js"],"names":["Writer","Reader","protobufPackage","baseCoin","denom","amount","Coin","encode","message","writer","create","uint32","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseDecCoin","DecCoin","baseIntProto","IntProto","baseDecProto","dec","DecProto"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n"]}]}