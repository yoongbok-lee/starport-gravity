{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/althea-net/cosmos-gravity-bridge/gravity.v1/module/types/gravity/msgs.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/althea-net/cosmos-gravity-bridge/gravity.v1/module/types/gravity/msgs.js","mtime":1620801165451},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/althea-net/cosmos-gravity-bridge/gravity.v1/module/types/gravity/msgs.js"],"names":["Reader","util","configure","Writer","Long","Coin","BridgeValidator","protobufPackage","baseMsgSetOrchestratorAddress","validator","orchestrator","ethAddress","MsgSetOrchestratorAddress","encode","message","writer","create","uint32","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgSetOrchestratorAddressResponse","MsgSetOrchestratorAddressResponse","_","baseMsgValsetConfirm","nonce","signature","MsgValsetConfirm","uint64","longToNumber","Number","baseMsgValsetConfirmResponse","MsgValsetConfirmResponse","baseMsgSendToEth","sender","ethDest","MsgSendToEth","amount","fork","ldelim","bridgeFee","baseMsgSendToEthResponse","MsgSendToEthResponse","baseMsgRequestBatch","denom","MsgRequestBatch","baseMsgRequestBatchResponse","MsgRequestBatchResponse","baseMsgConfirmBatch","tokenContract","ethSigner","MsgConfirmBatch","baseMsgConfirmBatchResponse","MsgConfirmBatchResponse","baseMsgConfirmLogicCall","invalidationId","invalidationNonce","MsgConfirmLogicCall","baseMsgConfirmLogicCallResponse","MsgConfirmLogicCallResponse","baseMsgDepositClaim","eventNonce","blockHeight","ethereumSender","cosmosReceiver","MsgDepositClaim","baseMsgDepositClaimResponse","MsgDepositClaimResponse","baseMsgWithdrawClaim","batchNonce","MsgWithdrawClaim","baseMsgWithdrawClaimResponse","MsgWithdrawClaimResponse","baseMsgErc20DeployedClaim","cosmosDenom","name","symbol","decimals","MsgErc20DeployedClaim","baseMsgErc20DeployedClaimResponse","MsgErc20DeployedClaimResponse","baseMsgLogicCallExecutedClaim","MsgLogicCallExecutedClaim","bytes","bytesFromBase64","base64FromBytes","baseMsgLogicCallExecutedClaimResponse","MsgLogicCallExecutedClaimResponse","baseMsgValsetUpdatedClaim","valsetNonce","MsgValsetUpdatedClaim","members","v","push","e","map","baseMsgValsetUpdatedClaimResponse","MsgValsetUpdatedClaimResponse","baseMsgCancelSendToEth","transactionId","MsgCancelSendToEth","baseMsgCancelSendToEthResponse","MsgCancelSendToEthResponse","MsgClientImpl","rpc","request","data","finish","promise","then","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../cosmos/base/v1beta1/coin\";\nimport { BridgeValidator } from \"../gravity/types\";\nexport const protobufPackage = \"gravity.v1\";\nconst baseMsgSetOrchestratorAddress = {\n    validator: \"\",\n    orchestrator: \"\",\n    ethAddress: \"\",\n};\nexport const MsgSetOrchestratorAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== \"\") {\n            writer.uint32(10).string(message.validator);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(18).string(message.orchestrator);\n        }\n        if (message.ethAddress !== \"\") {\n            writer.uint32(26).string(message.ethAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetOrchestratorAddress,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = reader.string();\n                    break;\n                case 2:\n                    message.orchestrator = reader.string();\n                    break;\n                case 3:\n                    message.ethAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSetOrchestratorAddress,\n        };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = String(object.validator);\n        }\n        else {\n            message.validator = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.ethAddress !== undefined && object.ethAddress !== null) {\n            message.ethAddress = String(object.ethAddress);\n        }\n        else {\n            message.ethAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined && (obj.validator = message.validator);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        message.ethAddress !== undefined && (obj.ethAddress = message.ethAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSetOrchestratorAddress,\n        };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = object.validator;\n        }\n        else {\n            message.validator = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.ethAddress !== undefined && object.ethAddress !== null) {\n            message.ethAddress = object.ethAddress;\n        }\n        else {\n            message.ethAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetOrchestratorAddressResponse = {};\nexport const MsgSetOrchestratorAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetOrchestratorAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetOrchestratorAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetOrchestratorAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgValsetConfirm = {\n    nonce: 0,\n    orchestrator: \"\",\n    ethAddress: \"\",\n    signature: \"\",\n};\nexport const MsgValsetConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.nonce !== 0) {\n            writer.uint32(8).uint64(message.nonce);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(18).string(message.orchestrator);\n        }\n        if (message.ethAddress !== \"\") {\n            writer.uint32(26).string(message.ethAddress);\n        }\n        if (message.signature !== \"\") {\n            writer.uint32(34).string(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgValsetConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.orchestrator = reader.string();\n                    break;\n                case 3:\n                    message.ethAddress = reader.string();\n                    break;\n                case 4:\n                    message.signature = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgValsetConfirm };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.ethAddress !== undefined && object.ethAddress !== null) {\n            message.ethAddress = String(object.ethAddress);\n        }\n        else {\n            message.ethAddress = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = String(object.signature);\n        }\n        else {\n            message.signature = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        message.ethAddress !== undefined && (obj.ethAddress = message.ethAddress);\n        message.signature !== undefined && (obj.signature = message.signature);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgValsetConfirm };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.ethAddress !== undefined && object.ethAddress !== null) {\n            message.ethAddress = object.ethAddress;\n        }\n        else {\n            message.ethAddress = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgValsetConfirmResponse = {};\nexport const MsgValsetConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgValsetConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgValsetConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgValsetConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSendToEth = { sender: \"\", ethDest: \"\" };\nexport const MsgSendToEth = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.ethDest !== \"\") {\n            writer.uint32(18).string(message.ethDest);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.bridgeFee !== undefined) {\n            Coin.encode(message.bridgeFee, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendToEth };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.ethDest = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.bridgeFee = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendToEth };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.ethDest !== undefined && object.ethDest !== null) {\n            message.ethDest = String(object.ethDest);\n        }\n        else {\n            message.ethDest = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        if (object.bridgeFee !== undefined && object.bridgeFee !== null) {\n            message.bridgeFee = Coin.fromJSON(object.bridgeFee);\n        }\n        else {\n            message.bridgeFee = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.ethDest !== undefined && (obj.ethDest = message.ethDest);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        message.bridgeFee !== undefined &&\n            (obj.bridgeFee = message.bridgeFee\n                ? Coin.toJSON(message.bridgeFee)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendToEth };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.ethDest !== undefined && object.ethDest !== null) {\n            message.ethDest = object.ethDest;\n        }\n        else {\n            message.ethDest = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        if (object.bridgeFee !== undefined && object.bridgeFee !== null) {\n            message.bridgeFee = Coin.fromPartial(object.bridgeFee);\n        }\n        else {\n            message.bridgeFee = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSendToEthResponse = {};\nexport const MsgSendToEthResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendToEthResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendToEthResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendToEthResponse };\n        return message;\n    },\n};\nconst baseMsgRequestBatch = { sender: \"\", denom: \"\" };\nexport const MsgRequestBatch = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.denom !== \"\") {\n            writer.uint32(18).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRequestBatch };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRequestBatch };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRequestBatch };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRequestBatchResponse = {};\nexport const MsgRequestBatchResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgRequestBatchResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgRequestBatchResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgRequestBatchResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConfirmBatch = {\n    nonce: 0,\n    tokenContract: \"\",\n    ethSigner: \"\",\n    orchestrator: \"\",\n    signature: \"\",\n};\nexport const MsgConfirmBatch = {\n    encode(message, writer = Writer.create()) {\n        if (message.nonce !== 0) {\n            writer.uint32(8).uint64(message.nonce);\n        }\n        if (message.tokenContract !== \"\") {\n            writer.uint32(18).string(message.tokenContract);\n        }\n        if (message.ethSigner !== \"\") {\n            writer.uint32(26).string(message.ethSigner);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(34).string(message.orchestrator);\n        }\n        if (message.signature !== \"\") {\n            writer.uint32(42).string(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConfirmBatch };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.tokenContract = reader.string();\n                    break;\n                case 3:\n                    message.ethSigner = reader.string();\n                    break;\n                case 4:\n                    message.orchestrator = reader.string();\n                    break;\n                case 5:\n                    message.signature = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConfirmBatch };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = String(object.tokenContract);\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.ethSigner !== undefined && object.ethSigner !== null) {\n            message.ethSigner = String(object.ethSigner);\n        }\n        else {\n            message.ethSigner = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = String(object.signature);\n        }\n        else {\n            message.signature = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.tokenContract !== undefined &&\n            (obj.tokenContract = message.tokenContract);\n        message.ethSigner !== undefined && (obj.ethSigner = message.ethSigner);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        message.signature !== undefined && (obj.signature = message.signature);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConfirmBatch };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = object.tokenContract;\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.ethSigner !== undefined && object.ethSigner !== null) {\n            message.ethSigner = object.ethSigner;\n        }\n        else {\n            message.ethSigner = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConfirmBatchResponse = {};\nexport const MsgConfirmBatchResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConfirmBatchResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConfirmBatchResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConfirmBatchResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConfirmLogicCall = {\n    invalidationId: \"\",\n    invalidationNonce: 0,\n    ethSigner: \"\",\n    orchestrator: \"\",\n    signature: \"\",\n};\nexport const MsgConfirmLogicCall = {\n    encode(message, writer = Writer.create()) {\n        if (message.invalidationId !== \"\") {\n            writer.uint32(10).string(message.invalidationId);\n        }\n        if (message.invalidationNonce !== 0) {\n            writer.uint32(16).uint64(message.invalidationNonce);\n        }\n        if (message.ethSigner !== \"\") {\n            writer.uint32(26).string(message.ethSigner);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(34).string(message.orchestrator);\n        }\n        if (message.signature !== \"\") {\n            writer.uint32(42).string(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConfirmLogicCall };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.invalidationId = reader.string();\n                    break;\n                case 2:\n                    message.invalidationNonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.ethSigner = reader.string();\n                    break;\n                case 4:\n                    message.orchestrator = reader.string();\n                    break;\n                case 5:\n                    message.signature = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConfirmLogicCall };\n        if (object.invalidationId !== undefined && object.invalidationId !== null) {\n            message.invalidationId = String(object.invalidationId);\n        }\n        else {\n            message.invalidationId = \"\";\n        }\n        if (object.invalidationNonce !== undefined &&\n            object.invalidationNonce !== null) {\n            message.invalidationNonce = Number(object.invalidationNonce);\n        }\n        else {\n            message.invalidationNonce = 0;\n        }\n        if (object.ethSigner !== undefined && object.ethSigner !== null) {\n            message.ethSigner = String(object.ethSigner);\n        }\n        else {\n            message.ethSigner = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = String(object.signature);\n        }\n        else {\n            message.signature = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.invalidationId !== undefined &&\n            (obj.invalidationId = message.invalidationId);\n        message.invalidationNonce !== undefined &&\n            (obj.invalidationNonce = message.invalidationNonce);\n        message.ethSigner !== undefined && (obj.ethSigner = message.ethSigner);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        message.signature !== undefined && (obj.signature = message.signature);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConfirmLogicCall };\n        if (object.invalidationId !== undefined && object.invalidationId !== null) {\n            message.invalidationId = object.invalidationId;\n        }\n        else {\n            message.invalidationId = \"\";\n        }\n        if (object.invalidationNonce !== undefined &&\n            object.invalidationNonce !== null) {\n            message.invalidationNonce = object.invalidationNonce;\n        }\n        else {\n            message.invalidationNonce = 0;\n        }\n        if (object.ethSigner !== undefined && object.ethSigner !== null) {\n            message.ethSigner = object.ethSigner;\n        }\n        else {\n            message.ethSigner = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConfirmLogicCallResponse = {};\nexport const MsgConfirmLogicCallResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConfirmLogicCallResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConfirmLogicCallResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConfirmLogicCallResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDepositClaim = {\n    eventNonce: 0,\n    blockHeight: 0,\n    tokenContract: \"\",\n    amount: \"\",\n    ethereumSender: \"\",\n    cosmosReceiver: \"\",\n    orchestrator: \"\",\n};\nexport const MsgDepositClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.eventNonce !== 0) {\n            writer.uint32(8).uint64(message.eventNonce);\n        }\n        if (message.blockHeight !== 0) {\n            writer.uint32(16).uint64(message.blockHeight);\n        }\n        if (message.tokenContract !== \"\") {\n            writer.uint32(26).string(message.tokenContract);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.ethereumSender !== \"\") {\n            writer.uint32(42).string(message.ethereumSender);\n        }\n        if (message.cosmosReceiver !== \"\") {\n            writer.uint32(50).string(message.cosmosReceiver);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(58).string(message.orchestrator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositClaim };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.eventNonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.blockHeight = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.tokenContract = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.ethereumSender = reader.string();\n                    break;\n                case 6:\n                    message.cosmosReceiver = reader.string();\n                    break;\n                case 7:\n                    message.orchestrator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDepositClaim };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = Number(object.eventNonce);\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = Number(object.blockHeight);\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = String(object.tokenContract);\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.ethereumSender !== undefined && object.ethereumSender !== null) {\n            message.ethereumSender = String(object.ethereumSender);\n        }\n        else {\n            message.ethereumSender = \"\";\n        }\n        if (object.cosmosReceiver !== undefined && object.cosmosReceiver !== null) {\n            message.cosmosReceiver = String(object.cosmosReceiver);\n        }\n        else {\n            message.cosmosReceiver = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.eventNonce !== undefined && (obj.eventNonce = message.eventNonce);\n        message.blockHeight !== undefined &&\n            (obj.blockHeight = message.blockHeight);\n        message.tokenContract !== undefined &&\n            (obj.tokenContract = message.tokenContract);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.ethereumSender !== undefined &&\n            (obj.ethereumSender = message.ethereumSender);\n        message.cosmosReceiver !== undefined &&\n            (obj.cosmosReceiver = message.cosmosReceiver);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDepositClaim };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = object.eventNonce;\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = object.blockHeight;\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = object.tokenContract;\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.ethereumSender !== undefined && object.ethereumSender !== null) {\n            message.ethereumSender = object.ethereumSender;\n        }\n        else {\n            message.ethereumSender = \"\";\n        }\n        if (object.cosmosReceiver !== undefined && object.cosmosReceiver !== null) {\n            message.cosmosReceiver = object.cosmosReceiver;\n        }\n        else {\n            message.cosmosReceiver = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgDepositClaimResponse = {};\nexport const MsgDepositClaimResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDepositClaimResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDepositClaimResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDepositClaimResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawClaim = {\n    eventNonce: 0,\n    blockHeight: 0,\n    batchNonce: 0,\n    tokenContract: \"\",\n    orchestrator: \"\",\n};\nexport const MsgWithdrawClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.eventNonce !== 0) {\n            writer.uint32(8).uint64(message.eventNonce);\n        }\n        if (message.blockHeight !== 0) {\n            writer.uint32(16).uint64(message.blockHeight);\n        }\n        if (message.batchNonce !== 0) {\n            writer.uint32(24).uint64(message.batchNonce);\n        }\n        if (message.tokenContract !== \"\") {\n            writer.uint32(34).string(message.tokenContract);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(42).string(message.orchestrator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawClaim };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.eventNonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.blockHeight = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.batchNonce = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.tokenContract = reader.string();\n                    break;\n                case 5:\n                    message.orchestrator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawClaim };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = Number(object.eventNonce);\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = Number(object.blockHeight);\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.batchNonce !== undefined && object.batchNonce !== null) {\n            message.batchNonce = Number(object.batchNonce);\n        }\n        else {\n            message.batchNonce = 0;\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = String(object.tokenContract);\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.eventNonce !== undefined && (obj.eventNonce = message.eventNonce);\n        message.blockHeight !== undefined &&\n            (obj.blockHeight = message.blockHeight);\n        message.batchNonce !== undefined && (obj.batchNonce = message.batchNonce);\n        message.tokenContract !== undefined &&\n            (obj.tokenContract = message.tokenContract);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawClaim };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = object.eventNonce;\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = object.blockHeight;\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.batchNonce !== undefined && object.batchNonce !== null) {\n            message.batchNonce = object.batchNonce;\n        }\n        else {\n            message.batchNonce = 0;\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = object.tokenContract;\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawClaimResponse = {};\nexport const MsgWithdrawClaimResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawClaimResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawClaimResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawClaimResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgErc20DeployedClaim = {\n    eventNonce: 0,\n    blockHeight: 0,\n    cosmosDenom: \"\",\n    tokenContract: \"\",\n    name: \"\",\n    symbol: \"\",\n    decimals: 0,\n    orchestrator: \"\",\n};\nexport const MsgErc20DeployedClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.eventNonce !== 0) {\n            writer.uint32(8).uint64(message.eventNonce);\n        }\n        if (message.blockHeight !== 0) {\n            writer.uint32(16).uint64(message.blockHeight);\n        }\n        if (message.cosmosDenom !== \"\") {\n            writer.uint32(26).string(message.cosmosDenom);\n        }\n        if (message.tokenContract !== \"\") {\n            writer.uint32(34).string(message.tokenContract);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== \"\") {\n            writer.uint32(50).string(message.symbol);\n        }\n        if (message.decimals !== 0) {\n            writer.uint32(56).uint64(message.decimals);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(66).string(message.orchestrator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgErc20DeployedClaim };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.eventNonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.blockHeight = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.cosmosDenom = reader.string();\n                    break;\n                case 4:\n                    message.tokenContract = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                case 7:\n                    message.decimals = longToNumber(reader.uint64());\n                    break;\n                case 8:\n                    message.orchestrator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgErc20DeployedClaim };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = Number(object.eventNonce);\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = Number(object.blockHeight);\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.cosmosDenom !== undefined && object.cosmosDenom !== null) {\n            message.cosmosDenom = String(object.cosmosDenom);\n        }\n        else {\n            message.cosmosDenom = \"\";\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = String(object.tokenContract);\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.decimals !== undefined && object.decimals !== null) {\n            message.decimals = Number(object.decimals);\n        }\n        else {\n            message.decimals = 0;\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.eventNonce !== undefined && (obj.eventNonce = message.eventNonce);\n        message.blockHeight !== undefined &&\n            (obj.blockHeight = message.blockHeight);\n        message.cosmosDenom !== undefined &&\n            (obj.cosmosDenom = message.cosmosDenom);\n        message.tokenContract !== undefined &&\n            (obj.tokenContract = message.tokenContract);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.decimals !== undefined && (obj.decimals = message.decimals);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgErc20DeployedClaim };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = object.eventNonce;\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = object.blockHeight;\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.cosmosDenom !== undefined && object.cosmosDenom !== null) {\n            message.cosmosDenom = object.cosmosDenom;\n        }\n        else {\n            message.cosmosDenom = \"\";\n        }\n        if (object.tokenContract !== undefined && object.tokenContract !== null) {\n            message.tokenContract = object.tokenContract;\n        }\n        else {\n            message.tokenContract = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.decimals !== undefined && object.decimals !== null) {\n            message.decimals = object.decimals;\n        }\n        else {\n            message.decimals = 0;\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgErc20DeployedClaimResponse = {};\nexport const MsgErc20DeployedClaimResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgErc20DeployedClaimResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgErc20DeployedClaimResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgErc20DeployedClaimResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgLogicCallExecutedClaim = {\n    eventNonce: 0,\n    blockHeight: 0,\n    invalidationNonce: 0,\n    orchestrator: \"\",\n};\nexport const MsgLogicCallExecutedClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.eventNonce !== 0) {\n            writer.uint32(8).uint64(message.eventNonce);\n        }\n        if (message.blockHeight !== 0) {\n            writer.uint32(16).uint64(message.blockHeight);\n        }\n        if (message.invalidationId.length !== 0) {\n            writer.uint32(26).bytes(message.invalidationId);\n        }\n        if (message.invalidationNonce !== 0) {\n            writer.uint32(32).uint64(message.invalidationNonce);\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(42).string(message.orchestrator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgLogicCallExecutedClaim,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.eventNonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.blockHeight = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.invalidationId = reader.bytes();\n                    break;\n                case 4:\n                    message.invalidationNonce = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.orchestrator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgLogicCallExecutedClaim,\n        };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = Number(object.eventNonce);\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = Number(object.blockHeight);\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.invalidationId !== undefined && object.invalidationId !== null) {\n            message.invalidationId = bytesFromBase64(object.invalidationId);\n        }\n        if (object.invalidationNonce !== undefined &&\n            object.invalidationNonce !== null) {\n            message.invalidationNonce = Number(object.invalidationNonce);\n        }\n        else {\n            message.invalidationNonce = 0;\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.eventNonce !== undefined && (obj.eventNonce = message.eventNonce);\n        message.blockHeight !== undefined &&\n            (obj.blockHeight = message.blockHeight);\n        message.invalidationId !== undefined &&\n            (obj.invalidationId = base64FromBytes(message.invalidationId !== undefined\n                ? message.invalidationId\n                : new Uint8Array()));\n        message.invalidationNonce !== undefined &&\n            (obj.invalidationNonce = message.invalidationNonce);\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgLogicCallExecutedClaim,\n        };\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = object.eventNonce;\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = object.blockHeight;\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.invalidationId !== undefined && object.invalidationId !== null) {\n            message.invalidationId = object.invalidationId;\n        }\n        else {\n            message.invalidationId = new Uint8Array();\n        }\n        if (object.invalidationNonce !== undefined &&\n            object.invalidationNonce !== null) {\n            message.invalidationNonce = object.invalidationNonce;\n        }\n        else {\n            message.invalidationNonce = 0;\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgLogicCallExecutedClaimResponse = {};\nexport const MsgLogicCallExecutedClaimResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgLogicCallExecutedClaimResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgLogicCallExecutedClaimResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgLogicCallExecutedClaimResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgValsetUpdatedClaim = {\n    eventNonce: 0,\n    valsetNonce: 0,\n    blockHeight: 0,\n    orchestrator: \"\",\n};\nexport const MsgValsetUpdatedClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.eventNonce !== 0) {\n            writer.uint32(8).uint64(message.eventNonce);\n        }\n        if (message.valsetNonce !== 0) {\n            writer.uint32(16).uint64(message.valsetNonce);\n        }\n        if (message.blockHeight !== 0) {\n            writer.uint32(24).uint64(message.blockHeight);\n        }\n        for (const v of message.members) {\n            BridgeValidator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.orchestrator !== \"\") {\n            writer.uint32(50).string(message.orchestrator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgValsetUpdatedClaim };\n        message.members = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.eventNonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.valsetNonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.blockHeight = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.members.push(BridgeValidator.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.orchestrator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgValsetUpdatedClaim };\n        message.members = [];\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = Number(object.eventNonce);\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.valsetNonce !== undefined && object.valsetNonce !== null) {\n            message.valsetNonce = Number(object.valsetNonce);\n        }\n        else {\n            message.valsetNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = Number(object.blockHeight);\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.members !== undefined && object.members !== null) {\n            for (const e of object.members) {\n                message.members.push(BridgeValidator.fromJSON(e));\n            }\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = String(object.orchestrator);\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.eventNonce !== undefined && (obj.eventNonce = message.eventNonce);\n        message.valsetNonce !== undefined &&\n            (obj.valsetNonce = message.valsetNonce);\n        message.blockHeight !== undefined &&\n            (obj.blockHeight = message.blockHeight);\n        if (message.members) {\n            obj.members = message.members.map((e) => e ? BridgeValidator.toJSON(e) : undefined);\n        }\n        else {\n            obj.members = [];\n        }\n        message.orchestrator !== undefined &&\n            (obj.orchestrator = message.orchestrator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgValsetUpdatedClaim };\n        message.members = [];\n        if (object.eventNonce !== undefined && object.eventNonce !== null) {\n            message.eventNonce = object.eventNonce;\n        }\n        else {\n            message.eventNonce = 0;\n        }\n        if (object.valsetNonce !== undefined && object.valsetNonce !== null) {\n            message.valsetNonce = object.valsetNonce;\n        }\n        else {\n            message.valsetNonce = 0;\n        }\n        if (object.blockHeight !== undefined && object.blockHeight !== null) {\n            message.blockHeight = object.blockHeight;\n        }\n        else {\n            message.blockHeight = 0;\n        }\n        if (object.members !== undefined && object.members !== null) {\n            for (const e of object.members) {\n                message.members.push(BridgeValidator.fromPartial(e));\n            }\n        }\n        if (object.orchestrator !== undefined && object.orchestrator !== null) {\n            message.orchestrator = object.orchestrator;\n        }\n        else {\n            message.orchestrator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgValsetUpdatedClaimResponse = {};\nexport const MsgValsetUpdatedClaimResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgValsetUpdatedClaimResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgValsetUpdatedClaimResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgValsetUpdatedClaimResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCancelSendToEth = { transactionId: 0, sender: \"\" };\nexport const MsgCancelSendToEth = {\n    encode(message, writer = Writer.create()) {\n        if (message.transactionId !== 0) {\n            writer.uint32(8).uint64(message.transactionId);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(18).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCancelSendToEth };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.transactionId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCancelSendToEth };\n        if (object.transactionId !== undefined && object.transactionId !== null) {\n            message.transactionId = Number(object.transactionId);\n        }\n        else {\n            message.transactionId = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.transactionId !== undefined &&\n            (obj.transactionId = message.transactionId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCancelSendToEth };\n        if (object.transactionId !== undefined && object.transactionId !== null) {\n            message.transactionId = object.transactionId;\n        }\n        else {\n            message.transactionId = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCancelSendToEthResponse = {};\nexport const MsgCancelSendToEthResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCancelSendToEthResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCancelSendToEthResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCancelSendToEthResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ValsetConfirm(request) {\n        const data = MsgValsetConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"ValsetConfirm\", data);\n        return promise.then((data) => MsgValsetConfirmResponse.decode(new Reader(data)));\n    }\n    SendToEth(request) {\n        const data = MsgSendToEth.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"SendToEth\", data);\n        return promise.then((data) => MsgSendToEthResponse.decode(new Reader(data)));\n    }\n    RequestBatch(request) {\n        const data = MsgRequestBatch.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"RequestBatch\", data);\n        return promise.then((data) => MsgRequestBatchResponse.decode(new Reader(data)));\n    }\n    ConfirmBatch(request) {\n        const data = MsgConfirmBatch.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"ConfirmBatch\", data);\n        return promise.then((data) => MsgConfirmBatchResponse.decode(new Reader(data)));\n    }\n    ConfirmLogicCall(request) {\n        const data = MsgConfirmLogicCall.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"ConfirmLogicCall\", data);\n        return promise.then((data) => MsgConfirmLogicCallResponse.decode(new Reader(data)));\n    }\n    DepositClaim(request) {\n        const data = MsgDepositClaim.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"DepositClaim\", data);\n        return promise.then((data) => MsgDepositClaimResponse.decode(new Reader(data)));\n    }\n    WithdrawClaim(request) {\n        const data = MsgWithdrawClaim.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"WithdrawClaim\", data);\n        return promise.then((data) => MsgWithdrawClaimResponse.decode(new Reader(data)));\n    }\n    ValsetUpdateClaim(request) {\n        const data = MsgValsetUpdatedClaim.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"ValsetUpdateClaim\", data);\n        return promise.then((data) => MsgValsetUpdatedClaimResponse.decode(new Reader(data)));\n    }\n    Erc20DeployedClaim(request) {\n        const data = MsgErc20DeployedClaim.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"Erc20DeployedClaim\", data);\n        return promise.then((data) => MsgErc20DeployedClaimResponse.decode(new Reader(data)));\n    }\n    LogicCallExecutedClaim(request) {\n        const data = MsgLogicCallExecutedClaim.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"LogicCallExecutedClaim\", data);\n        return promise.then((data) => MsgLogicCallExecutedClaimResponse.decode(new Reader(data)));\n    }\n    SetOrchestratorAddress(request) {\n        const data = MsgSetOrchestratorAddress.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"SetOrchestratorAddress\", data);\n        return promise.then((data) => MsgSetOrchestratorAddressResponse.decode(new Reader(data)));\n    }\n    CancelSendToEth(request) {\n        const data = MsgCancelSendToEth.encode(request).finish();\n        const promise = this.rpc.request(\"gravity.v1.Msg\", \"CancelSendToEth\", data);\n        return promise.then((data) => MsgCancelSendToEthResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}