{"remainingRequest":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","dependencies":[{"path":"/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","mtime":1620801165499},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/starport-gravity/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/starport-gravity/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js"],"names":["Long","util","configure","Writer","Reader","MerklePrefix","protobufPackage","State","stateFromJSON","object","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","UNRECOGNIZED","stateToJSON","baseConnectionEnd","clientId","state","delayPeriod","ConnectionEnd","encode","message","writer","create","uint32","string","versions","v","Version","fork","ldelim","int32","counterparty","undefined","Counterparty","uint64","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","longToNumber","skipType","fromJSON","String","e","Number","toJSON","obj","map","fromPartial","baseIdentifiedConnection","id","IdentifiedConnection","baseCounterparty","connectionId","prefix","baseClientPaths","paths","ClientPaths","baseConnectionPaths","ConnectionPaths","baseVersion","identifier","features","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}