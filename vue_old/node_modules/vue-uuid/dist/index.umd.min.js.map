{"version":3,"file":"index.umd.min.js","sources":["../node_modules/uuid/dist/esm-node/rng.js","../node_modules/uuid/dist/esm-node/bytesToUuid.js","../node_modules/uuid/dist/esm-node/v1.js","../node_modules/uuid/dist/esm-node/v35.js","../index.js","../node_modules/uuid/dist/esm-node/v3.js","../node_modules/uuid/dist/esm-node/md5.js","../node_modules/uuid/dist/esm-node/v4.js","../node_modules/uuid/dist/esm-node/v5.js","../node_modules/uuid/dist/esm-node/sha1.js"],"sourcesContent":["import crypto from 'crypto';\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  return crypto.randomFillSync(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset) {\n  const i = offset || 0;\n  const bth = byteToHex; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (bth[buf[i + 0]] + bth[buf[i + 1]] + bth[buf[i + 2]] + bth[buf[i + 3]] + '-' + bth[buf[i + 4]] + bth[buf[i + 5]] + '-' + bth[buf[i + 6]] + bth[buf[i + 7]] + '-' + bth[buf[i + 8]] + bth[buf[i + 9]] + '-' + bth[buf[i + 10]] + bth[buf[i + 11]] + bth[buf[i + 12]] + bth[buf[i + 13]] + bth[buf[i + 14]] + bth[buf[i + 15]]).toLowerCase();\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || [];\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || bytesToUuid(b);\n}\n\nexport default v1;","import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  const bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    const off = buf && offset || 0;\n    if (typeof value === 'string') value = stringToBytes(value);\n    if (typeof namespace === 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) {\n      throw TypeError('value must be an array of bytes');\n    }\n\n    if (!Array.isArray(namespace) || namespace.length !== 16) {\n      throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n    } // Per 4.3\n\n\n    const bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (let idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import { v1, v3, v4, v5 } from \"uuid\";\n\n/**\n * @typedef {Object} UUID\n * @property {typeof v1} v1\n * @property {typeof v3} v3\n * @property {typeof v4} v4\n * @property {typeof v5} v5\n */\n\n/**\n * An object with uuid's v1, v3, v4 and v5 functions.\n * @type {UUID}\n */\nexport const uuid = { v1, v3, v4, v5 };\n\n/**\n * Installs UUID on Vue instance. It creates a property on Vue instance to\n * expose an object with uuid's v1, v3, v4 and v5 functions.\n * @example ```js\n * import Vue from 'vue';\n * import VueUUID from 'vue-uuid';\n *\n * Vue.use(VueUUID);\n *\n * new Vue({\n *   mounted () {\n *     console.log(this.$uuid.v1());\n *   }\n * });\n * ```\n * @param {import('vue').default} Vue Vue constructor.\n */\nexport default function install(Vue) {\n  Vue.prototype.$uuid = uuid;\n}\n","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  if (typeof options === 'string') {\n    buf = options === 'binary' ? new Uint8Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    const start = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[start + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return bytesToUuid(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;"],"names":["rnds8","Uint8Array","rng","crypto","randomFillSync","byteToHex","i","push","toString","substr","bytesToUuid","buf","offset","bth","toLowerCase","_nodeId","_clockseq","_lastMSecs","_lastNSecs","name","version","hashfunc","generateUUID","value","namespace","off","str","unescape","encodeURIComponent","bytes","length","charCodeAt","stringToBytes","uuid","replace","hex","parseInt","uuidToBytes","Array","isArray","TypeError","concat","idx","err","DNS","URL","options","b","node","clockseq","undefined","seedBytes","random","msecs","Date","now","nsecs","dt","Error","tl","tmh","n","v35","Buffer","from","createHash","update","digest","rnds","start","Vue","prototype","$uuid"],"mappings":"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"}